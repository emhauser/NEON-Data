table,fieldName,description,dataType,units,parserToCreate,entryValidationRulesParser,entryValidationRulesForm
ltr_pertrap,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
ltr_pertrap,plotID,"Plot identifier (NEON site code_XXX)",string,NA,,"[REQUIRE][NAMED_LOCATION_TYPE('OS Plot - ltr')]","[REQUIRE][NAMED_LOCATION_TYPE('OS Plot - ltr')]"
ltr_pertrap,subplotID,"Identifier for the NEON subplot",string,NA,,,"[LOV]"
ltr_pertrap,trapID,"Identifier for trap",string,NA,"[IF (targetTaxaPresent='N'), '']","[IF(targetTaxaPresent != 'N'), REQUIRE]","[IF(targetTaxaPresent != 'N'), REQUIRE]"
ltr_pertrap,startDate,"The start date-time or interval during which an event occurred",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE]","[REQUIRE][SUGGESTED_ENTRY(system date)][DATE_FORMAT(YYYY-MM-DD)]"
ltr_pertrap,date,"Date or date and time of measurement, observation, or collection event",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE]","[REQUIRE][DEFAULT_TO(startDate)]"
ltr_pertrap,samplingProtocolVersion,"The NEON document number and version where detailed information regarding the sampling method used is available; format NEON.DOC.######vX",string,NA,,"[REQUIRE]","[REQUIRE][LOV]"
ltr_pertrap,targetTaxaPresent,"Indicator of whether the sample contained individuals of the target taxa",string,NA,,"[REQUIRE]","[REQUIRE][LOV]"
ltr_pertrap,trapType,"Type of trap from which a sample was collected",string,NA,"[IF (targetTaxaPresent='N'), ''][LOV]","[IF(targetTaxaPresent != 'N'), REQUIRE]","[IF(targetTaxaPresent != 'N'), REQUIRE]"
ltr_pertrap,trapPlacement,"Strategy for selecting plot location",string,NA,"[IF (targetTaxaPresent='N'), ''][LOV]","[IF(targetTaxaPresent != 'N'), REQUIRE]","[IF(targetTaxaPresent != 'N'), REQUIRE][LOV]"
ltr_pertrap,trapSize,"Size of trap",real,squareMeter,"[IF (targetTaxaPresent='N'), ''*0][LOV]","[IF(targetTaxaPresent != 'N'), REQUIRE]","[IF(targetTaxaPresent != 'N'), REQUIRE][LOV]"
ltr_pertrap,remarks,"Technician notes; free text comments accompanying the record",string,NA,,,
ltr_pertrap,recordedBy,"An identifier for the technician who recorded the data",string,NA,,,"[FROM_PERSONNEL]"
ltr_pertrap,dataQF,"Data quality flag",string,NA,,,
vst_shrubgroup,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
vst_shrubgroup,startDate,"The start date-time or interval during which an event occurred",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE]","[REQUIRE][SUGGESTED_ENTRY(systemDate)][DATE_FORMAT(YYYY-MM_DD)]"
vst_shrubgroup,endDate,"The end date-time or interval during which an event occurred",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE]","[REQUIRE][SUGGESTED_ENTRY(startDate)]"
vst_shrubgroup,eventID,"An identifier for the set of information associated with the event, which includes information about the place and time of the event",string,NA,,"[REQUIRE][ASCII]","[FROM_TABLE(vst_perplotperyear_in)][SUGGESTED_ENTRY(previousValue)]"
vst_shrubgroup,plotID,"Plot identifier (NEON site code_XXX)",string,NA,,"[REQUIRE][NAMED_LOCATION_TYPE('OS Plot - vst')]","[REQUIRE][NAMED_LOCATION_TYPE('OS Plot - vst')][SUGGESTED_ENTRY(previousValue)]"
vst_shrubgroup,subplotID,"Identifier for the NEON subplot",string,NA,,"[LOV][ASCII]","[LOV]"
vst_shrubgroup,nestedSubplotID,"Numeric identifier for nested subplot ID within a subplotID",string,NA,,"[LOV][ASCII]","[LOV]"
vst_shrubgroup,groupID,"Identifier for a group of individuals being measured",string,NA,,"[ASCII][MATCH_REGULAR_EXPRESSION('^[0-9]{2}_[0-9]{2}')]","[REQUIRE][MATCH_REGULAR_EXPRESSION(^[0-9]{2}[_][0-9]{2})]"
vst_shrubgroup,taxonID,"Species code, based on one or more sources",string,NA,,"[REQUIRE][ASCII]","[REQUIRE][ELEMENT_OF('PLANT', 'taxonID', 'T']"
vst_shrubgroup,identificationReferences,"A list of sources (concatenated and semicolon separated) used to derive the specific taxon concept; including field guide editions, books, or versions of NEON keys used",string,NA,,"[ASCII]",
vst_shrubgroup,identificationQualifier,"A standard term to express the determiner's doubts about the Identification",string,NA,,"[LOV][ASCII]","[LOV]"
vst_shrubgroup,morphospeciesID,"Identifier for morphospecies",string,NA,,"[ASCII]","[FROM_TABLE]"
vst_shrubgroup,morphospeciesIDRemarks,"Technician notes about the morphospecies; free text comments accompanying the record",string,NA,,"[ASCII]","[ASCII]"
vst_shrubgroup,volumePercent,"Percent of the total volume of a group attributed to a particular species",real,percent,,"[REQUIRE][GREATER_THAN(0)][LESS_THAN_OR_EQUAL_TO(100)]","[REQUIRE][GREATER_THAN(0)][LESS_THAN_OR_EQUAL_TO(100)][MATCH_REGULAR_EXPRESSION(^([1-9][0-9]?$)|^100$|^0.5$)]"
vst_shrubgroup,livePercent,"Percent of a given species, within a group, that is alive",real,percent,,"[REQUIRE][GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(100)]","[REQUIRE][GREATER_THAN(0)][LESS_THAN_OR_EQUAL_TO(100)][MATCH_REGULAR_EXPRESSION(^([1-9][0-9]?$)|^100$|^0.5$)]"
vst_shrubgroup,deadPercent,"Percent of a given species, within a group, that is dead",real,percent,,"[REQUIRE][GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(100)]","[REQUIRE][GREATER_THAN(0)][LESS_THAN_OR_EQUAL_TO(100)][MATCH_REGULAR_EXPRESSION(^([1-9][0-9]?$)|^100$|^0.5$)]"
vst_shrubgroup,canopyArea,"Area of the group canopy",real,squareMeter,,"[REQUIRE][GREATER_THAN(0)][LESS_THAN_OR_EQUAL_TO(400)]","[REQUIRE][GREATER_THAN(0)][LESS_THAN_OR_EQUAL_TO(vst_perplotperyear:nestedSubplotAreaShrubSapling)]"
vst_shrubgroup,aGroupHeight,"Height of tallest 5 stems in group, a",real,meter,,"[REQUIRE][GREATER_THAN(0)][LESS_THAN(10)]","[REQUIRE][GREATER_THAN(0)][LESS_THAN(10)]"
vst_shrubgroup,bGroupHeight,"Height of tallest 5 stems in group, b",real,meter,,"[GREATER_THAN(0)][LESS_THAN(10)]","[GREATER_THAN(0)][LESS_THAN(10)]"
vst_shrubgroup,cGroupHeight,"Height of tallest 5 stems in group, c",real,meter,,"[GREATER_THAN(0)][LESS_THAN(10)]","[GREATER_THAN(0)][LESS_THAN(10)]"
vst_shrubgroup,dGroupHeight,"Height of tallest 5 stems in group, d",real,meter,,"[GREATER_THAN(0)][LESS_THAN(10)]","[GREATER_THAN(0)][LESS_THAN(10)]"
vst_shrubgroup,eGroupHeight,"Height of tallest 5 stems in group, e",real,meter,,"[GREATER_THAN(0)][LESS_THAN(10)]","[GREATER_THAN(0)][LESS_THAN(10)]"
vst_shrubgroup,meanHeight,"The mean of multiple height measurements",real,meter,"[MEAN(aGroupHeight, bGroupHeight, cGroupHeight, dGroupHeight, eGroupHeight)]",,
vst_shrubgroup,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII]","[ASCII]"
vst_shrubgroup,measuredBy,"An identifier for the technician who measured or collected the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
vst_shrubgroup,recordedBy,"An identifier for the technician who recorded the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
vst_shrubgroup,dataQF,"Data quality flag",string,NA,,"[ASCII]",
vst_shrubgroup,fulcrumPrimaryKey,"Primary identifier for the record in Fulcrum at the same granularity for which the record occurs in the NEON database (i.e., one fulcrumPrimaryKey should map to a single record in the NEON database)",string,NA,,"[ASCII]",
vst_perplotperyear,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
vst_perplotperyear,plotID,"Plot identifier (NEON site code_XXX)",string,NA,,"[REQUIRE][NAMED_LOCATION_TYPE('OS Plot - vst')]","[REQUIRE][NAMED_LOCATION_TYPE('OS Plot - vst')]"
vst_perplotperyear,startDate,"The start date-time or interval during which an event occurred",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE]","[REQUIRE][SUGGESTED_ENTRY(systemDate)][DATE_FORMAT(YYYY-MM-DD)]"
vst_perplotperyear,endDate,"The end date-time or interval during which an event occurred",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE]","[REQUIRE][SUGGESTED_ENTRY(startDate)]"
vst_perplotperyear,samplingImpractical,"Samples and/or measurements were not collected due to the indicated circumstance",string,NA,,"[LOV][ASCII]","[LOV]"
vst_perplotperyear,yearBoutBegan,"The calendar year that the bout began",integer,NA,,,"[REQUIRE][MATCH_REGULAR_EXPRESSION(^[20]{2}+[1-5]{1}[0-9]{1})]"
vst_perplotperyear,eventID,"An identifier for the set of information associated with the event, which includes information about the place and time of the event",string,NA,,,"['vst_' + siteID + yearBoutBegan]"
vst_perplotperyear,eventType,"Classification of information associated with the event type",string,NA,,"[LOV][ASCII]","[REQUIRE][LOV]"
vst_perplotperyear,dataCollected,"Specific measurements made in a given event",string,NA,,"[LOV][ASCII]","[LOV]"
vst_perplotperyear,randomSubplotA,"Randomly selected subplot, A",string,NA,,"[LOV][ASCII]","[LOV]"
vst_perplotperyear,randomSubplotB,"Randomly selected subplot, B",string,NA,,"[LOV][ASCII]","[LOV]"
vst_perplotperyear,subplotsSampled,"List of subplots sampled",string,NA,"[IF IS_NOT_BLANK(randomSubplotA), randomSubplotA + ' | '  + randomSubplotB][IF IS_BLANK(randomSubplotA) AND totalSampledAreaTrees = 400,  '31 | 32 |  40 | 41']","[ASCII]",
vst_perplotperyear,samplingProtocolVersion,"The NEON document number and version where detailed information regarding the sampling method used is available; format NEON.DOC.######vX",string,NA,,"[LOV][ASCII]","[LOV]"
vst_perplotperyear,targetTaxaPresent,"Indicator of whether the sample contained individuals of the target taxa",string,NA,,"[LOV][ASCII]","[LOV]"
vst_perplotperyear,woodyTargetTaxaPresent,"Indicator of whether the plot contains qualifying woody vegetation",string,NA,"[IF (treesPresent = 'Y'), 'Y'][IF (shrubsPresent = 'Y'), 'Y'][IF (lianasPresent = 'Y'), 'Y'][IF (treesPresent = 'N' & shrubsPresent = 'N' & lianasPresent = 'N'), 'N']","[LOV][ASCII]","[LOV]"
vst_perplotperyear,nonWoodyTargetTaxaPresent,"Indicator of whether the plot contains qualifying non-woody vegetation",string,NA,"[IF (cactiPresent = 'Y'), 'Y'][IF (fernsPresent = 'Y'), 'Y'][IF (yuccasPresent = 'Y'), 'Y'][IF (palmsPresent = 'Y'), 'Y'][IF (ocotillosPresent = 'Y'), 'Y'][IF (xerophyllumPresent = 'Y'), 'Y'][IF (cactiPresent = 'N' & fernsPresent = 'N' & yuccasPresent = 'N' & palmsPresent = 'N' & ocotillosPresent = 'N' & xerophyllumPresent = 'N'), 'N']","[LOV][ASCII]","[LOV]"
vst_perplotperyear,treesPresent,"Indicator of whether the plot contains trees >=10 cm diameter",string,NA,,"[LOV][ASCII]","[LOV]"
vst_perplotperyear,treesAbsentList,"List of subplots in which trees are not present",string,NA,,,"[FROM_TABLE][SEE_ATBD]"
vst_perplotperyear,shrubsPresent,"Indicator of whether the plot contains shrubs, saplings, or small trees",string,NA,,"[LOV][ASCII]","[LOV]"
vst_perplotperyear,shrubsAbsentList,"List of subplots or nested subplots in which shrubs, saplings and small trees are not present",string,NA,,,"[FROM_TABLE][SEE_ATBD]"
vst_perplotperyear,lianasPresent,"Indicator of whether the plot contains lianas",string,NA,,"[LOV][ASCII]","[LOV]"
vst_perplotperyear,lianasAbsentList,"List of subplots or nested subplots in which lianas are not present",string,NA,,,"[FROM_TABLE][SEE_ATBD]"
vst_perplotperyear,cactiPresent,"Indicator of whether the plot contains cacti",string,NA,,"[LOV][ASCII]","[LOV]"
vst_perplotperyear,cactiAbsentList,"List of subplots or nested subplots in which cacti are not present",string,NA,,,"[FROM_TABLE][SEE_ATBD]"
vst_perplotperyear,fernsPresent,"Indicator of whether the plot contains ferns",string,NA,,"[LOV][ASCII]","[LOV]"
vst_perplotperyear,fernsAbsentList,"List of subplots or nested subplots in which ferns are not present",string,NA,,,"[FROM_TABLE][SEE_ATBD]"
vst_perplotperyear,yuccasPresent,"Indicator of whether the plot contains yucca or yucca-like growth forms",string,NA,,"[LOV][ASCII]","[LOV]"
vst_perplotperyear,yuccasAbsentList,"List of subplots or nested subplots in which yuccas are not present",string,NA,,,"[FROM_TABLE][SEE_ATBD]"
vst_perplotperyear,palmsPresent,"Indicator of whether the plot contains palms of any size",string,NA,,"[LOV][ASCII]","[LOV]"
vst_perplotperyear,palmsAbsentList,"List of subplots or nested subplots in which palm are not present",string,NA,,,"[FROM_TABLE][SEE_ATBD]"
vst_perplotperyear,ocotillosPresent,"Indicator of whether the plot contains ocotillo",string,NA,,"[LOV][ASCII]","[LOV]"
vst_perplotperyear,ocotillosAbsentList,"List of subplots or nested subplots in which ocotillos are not present",string,NA,,,"[FROM_TABLE][SEE_ATBD]"
vst_perplotperyear,xerophyllumPresent,"Indicator of whether the plot contains xerophyllum",string,NA,,"[LOV][ASCII]","[LOV]"
vst_perplotperyear,xerophyllumAbsentList,"List of subplots or nested subplots in which xerophyllum are not present",string,NA,,,"[FROM_TABLE][SEE_ATBD]"
vst_perplotperyear,nestedSubplotAreaShrubSapling,"Size of nested plot in which shrubs, saplings and small trees were measured",string,NA,,"[LOV][ASCII]","[REQUIRE][LOV]"
vst_perplotperyear,nestedSubplotAreaLiana,"Size of nested plot in which lianas were measured",string,NA,,"[LOV][ASCII]","[REQUIRE][LOV]"
vst_perplotperyear,nestedSubplotAreaOther,"Size of nested plot in which other qualifying growthForms were measured",string,NA,,"[LOV][ASCII]","[REQUIRE][LOV]"
vst_perplotperyear,totalSampledAreaTrees,"Total plot area sampled for single and multi-bole trees",real,squareMeter,,"[IF(dataCollected = 'dendrometerOnly'), REQUIRE_NULL][IF(dataCollected != 'dendrometerOnly'), REQUIRE]","[REQUIRE][SEE_ATBD]"
vst_perplotperyear,totalSampledAreaShrubSapling,"Total plot area sampled for saplings, shrubs, and small trees",real,squareMeter,,"[IF(dataCollected = 'dendrometerOnly'), REQUIRE_NULL][IF(dataCollected != 'dendrometerOnly'), REQUIRE]","[REQUIRE][SEE_ATBD]"
vst_perplotperyear,totalSampledAreaLiana,"Total plot area sampled for liana",real,squareMeter,,"[IF(dataCollected = 'dendrometerOnly'), REQUIRE_NULL][IF(dataCollected != 'dendrometerOnly'), REQUIRE]","[REQUIRE][SEE_ATBD]"
vst_perplotperyear,totalSampledAreaOther,"Total plot area sampled for qualifying non-woody growth forms",real,squareMeter,,"[IF(dataCollected = 'dendrometerOnly'), REQUIRE_NULL][IF(dataCollected != 'dendrometerOnly'), REQUIRE]","[REQUIRE][SEE_ATBD]"
vst_perplotperyear,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII]","[ASCII]"
vst_perplotperyear,measuredBy,"An identifier for the technician who measured or collected the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
vst_perplotperyear,recordedBy,"An identifier for the technician who recorded the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
vst_perplotperyear,dataQF,"Data quality flag",string,NA,,"[ASCII]",
ltr_fielddata,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
ltr_fielddata,plotID,"Plot identifier (NEON site code_XXX)",string,NA,,"[REQUIRE][NAMED_LOCATION_TYPE('OS Plot - ltr' OR 'SITE')]","[REQUIRE][NAMED_LOCATION_TYPE('OS Plot - ltr')]"
ltr_fielddata,trapID,"Identifier for trap",string,NA,,"[IF (samplingImpractical ='OK'), REQUIRE]","[REQUIRE][FROM_TABLE]"
ltr_fielddata,setDate,"Date that trap was set",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE][IF (samplingImpractical ='OK'), LESS_THAN(collectDate)]","[REQUIRE][LESS_THAN(collectDate)][DATE_FORMAT(YYYY-MM-DD)]"
ltr_fielddata,collectDate,"Date of the collection event",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE]","[REQUIRE][SUGGESTED_ENTRY(system date)][DATE_FORMAT(YYYY-MM-DD)]; [IF(collectDate - setDate) > 365 days, WARN]"
ltr_fielddata,samplingImpractical,"Samples and/or measurements were not collected due to the indicated circumstance",string,NA,"[LOV]",,"[LOV]"
ltr_fielddata,yearBoutBegan,"The calendar year that the bout began",integer,NA,,,"[REQUIRE][MATCH_REGULAR_EXPRESSION(^[20]{2}+[1-5]{1}[0-9]{1})]"
ltr_fielddata,boutNumber,"Number of the sampling bout within a calendar year, beginning with 1",string,NA,,,"[MATCH_REGULAR_EXPRESSION([0-9]{2}]"
ltr_fielddata,eventID,"An identifier for the set of information associated with the event, which includes information about the place and time of the event",string,NA,,"[IF(collectDate> 2020-05-01T00:00),REQUIRE][MATCH_REGULAR_EXPRESSION('LTR.20[0-9]{2}.[A-Z]{4}.[0-9]{2}')]","[CONCATENATE ('LTR.' + yearBoutBegan' + '.' + siteID + '.' + boutNumber )]"
ltr_fielddata,trappingDays,"Decimal days between trap setting and collecting events",real,nominalDay,"[IF (trapCondition IN ('Litter collected - Trap in good shape, no issues', 'Litter collected; Trap previously flooded', 'Litter not collected - trap empty')), collectDate-setDate][DAYS]",,
ltr_fielddata,fieldSampleID,"Unique identifier for a field sample",string,NA,,"[DOES_NOT_EXIST][IF trapCondition IN ('Litter collected - Trap in good shape, no issues', 'Litter collected; Trap previously flooded'), REQUIRE]","[IF(trapCondition='Litter collected - Trap in good shape, no issues' or 'Litter collected; Trap previously flooded'), REQUIRE]"
ltr_fielddata,fieldSampleFate,"Fate of a field sample",string,NA,"[IF (IS_NOT_BLANK(fieldSampleID)), DEFAULT_TO('active')][IF (IS_BLANK(fieldSampleID)), '']","[IF (IS_BLANK(fieldSampleID)), REQUIRE_NULL][IF (IS_NOT_BLANK(fieldSampleID)), REQUIRE][LOV][ASCII]","[SUGGESTED_ENTRY('active')]"
ltr_fielddata,fieldSampleBarcode,"Barcode of a field sample",string,NA,,,
ltr_fielddata,samplingProtocolVersion,"The NEON document number and version where detailed information regarding the sampling method used is available; format NEON.DOC.######vX",string,NA,"[LOV]","[REQUIRE]","[REQUIRE][LOV][SUGGESTED_ENTRY(previousValue)]"
ltr_fielddata,trapCondition,"Condition of litter trap and indication of whether litter was collected",string,NA,"[LOV]","[IF(samplingImpractical ='OK'), REQUIRE]","[REQUIRE][LOV]"
ltr_fielddata,toxicodendronPossible,"Indicator for whether a sample may contain Toxicodendron spp",string,NA,"[LOV]",,"[LOV]"
ltr_fielddata,remarks,"Technician notes; free text comments accompanying the record",string,NA,,,
ltr_fielddata,measuredBy,"An identifier for the technician who measured or collected the data",string,NA,,,"[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
ltr_fielddata,recordedBy,"An identifier for the technician who recorded the data",string,NA,,,"[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
ltr_fielddata,dataQF,"Data quality flag",string,NA,,,
vst_mappingandtagging,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
vst_mappingandtagging,startDate,"The start date-time or interval during which an event occurred",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE]","[REQUIRE][SUGGESTED_ENTRY(systemDate)][DATE_FORMAT(YYYY-MM-DD)]"
vst_mappingandtagging,endDate,"The end date-time or interval during which an event occurred",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE]","[REQUIRE][SUGGESTED_ENTRY(startDate)]"
vst_mappingandtagging,yearBoutBegan,"The calendar year that the bout began",integer,NA,,,"[REQUIRE][MATCH_REGULAR_EXPRESSION(^20[1-5]{1}[0-9]{1})]"
vst_mappingandtagging,eventID,"An identifier for the set of information associated with the event, which includes information about the place and time of the event",string,NA,,"[ASCII]","[FROM_TABLE(vst_perplotperyear_in)]"
vst_mappingandtagging,plotID,"Plot identifier (NEON site code_XXX)",string,NA,,"[REQUIRE][NAMED_LOCATION_TYPE('OS Plot - vst')]","[REQUIRE][NAMED_LOCATION_TYPE('OS Plot - vst')]"
vst_mappingandtagging,subplotID,"Identifier for the NEON subplot",string,NA,,"[LOV][ASCII]","[LOV]"
vst_mappingandtagging,nestedSubplotID,"Numeric identifier for nested subplot ID within a subplotID",string,NA,,"[LOV]","[LOV]"
vst_mappingandtagging,pointID,"Identifier for a point location",string,NA,,"[ASCII]","[NAMED_LOCATION_TYPE('OS Point - vst')][LOV]"
vst_mappingandtagging,stemDistance,"Horizontal distance from stem to pointID location",real,meter,,"[GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN(56)]","[GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN(40)]"
vst_mappingandtagging,stemAzimuth,"Azimuth relative to True North between stem and pointID location",real,degree,,"[GREATER_THAN(0)][LESS_THAN_OR_EQUAL_TO(360)]","[GREATER_THAN(0)][LESS_THAN_OR_EQUAL_TO(360)]"
vst_mappingandtagging,recordType,"Categorical indicator for type of data record",string,NA,,"[LOV]","[LOV]"
vst_mappingandtagging,cfcOnlyTag,"Indicator for whether a tagID is a associated with canopy foliage sampling only",string,NA,,"[LOV][ASCII]","[LOV]"
vst_mappingandtagging,tagID,"Domain-level unique identifier of tag used to mark the individual",string,NA,,"[ASCII]","[REQUIRE][MATCH_REGULAR_EXPRESSION ((^[0-9]{1,5}[A-Z]{0,1})"
vst_mappingandtagging,vstID,"Year specific identifier for the individual",string,NA,,"[DOES_NOT_EXIST][ASCII][IF (recordType != 'temporary'), MATCH_REGULAR_EXPRESSION('^VST.[A-Z]{4}.[0-9]{5}[A-Z]{0,1}.20[1-5]{1}[0-9]{1}')][IF (recordType = 'temporary'), MATCH_REGULAR_EXPRESSION('^TEMP.[A-Z]{4}.[0-9]{5}[A-Z]{0,1}.20[1-5]{1}[0-9]{1}')]","[DOES_NOT_EXIST][ASCII][IF (recordType != 'temporary'), MATCH_REGULAR_EXPRESSION('^VST.[A-Z]{4}.[0-9]{5}[A-Z]{0,1}.20[1-5]{1}[0-9]{1}')][IF (recordType = 'temporary'), MATCH_REGULAR_EXPRESSION('^TEMP.[A-Z]{4}.[0-9]{5}[A-Z]{0,1}.20[1-5]{1}[0-9]{1}')]"
vst_mappingandtagging,vstBarcode,"Barcode for vstID",string,NA,,"[ASCII]",
vst_mappingandtagging,vstFate,"Fate for vstID",string,NA,,"[ASCII]","[DEFAULT_TO('released')][HIDDEN]"
vst_mappingandtagging,individualID,"Domain-level unique identifier for an individual: NEON.MOD.D##.######",string,NA,,"[MIGHT_EXIST][ASCII][IF (recordType != 'temporary'), MATCH_REGULAR_EXPRESSION('^NEON.PLA.D[0-2]{1}[0-9]{1}.[A-Z]{4}.[0-9]{5}[A-Z]{0,1}')][IF (recordType = 'temporary'), MATCH_REGULAR_EXPRESSION('^TEMP.PLA.[A-Z]{4}.20[0-9]{2}.[0-9]{5}')]","[IF(recordType!='temporary'), 'NEON.PLA.' + domainID + '.' + siteID + '.' + tagID][IF(recordType='temporary'), 'TEMP.PLA.' + siteID + '.' + yearBoutBegan + '.' + #####]"
vst_mappingandtagging,individualBarcode,"Barcode for a tagged individual",string,NA,,"[ASCII]","[HIDDEN]"
vst_mappingandtagging,individualFate,"Fate of a tagged individual",string,NA,,"[ASCII]","[DEFAULT_TO('released')][HIDDEN]"
vst_mappingandtagging,supportingStemTagID,"Unique tagID for stem on which a liana is growing",string,NA,,"[ASCII]","[MATCH_REGULAR_EXPRESSION([0-9]{5}[A-E]?)]"
vst_mappingandtagging,supportingStemIndividualID,"Globally unique identifier for stem on which a liana is growing",string,NA,,"[REFERENCE_SAMPLE_EXISTS('tag', 'taggedPlant')][ASCII]","[HIDDEN]['NEON.PLA.' + domainID + '.' + siteID + '.' + tagID]"
vst_mappingandtagging,previouslyTaggedAs,"Indicates the tagID previously reported for a given individual",string,NA,,"[ASCII]","[FROM_TABLE(vst.tagID)]"
vst_mappingandtagging,samplingProtocolVersion,"The NEON document number and version where detailed information regarding the sampling method used is available; format NEON.DOC.######vX",string,NA,,"[LOV][ASCII]","[LOV]"
vst_mappingandtagging,taxonID,"Species code, based on one or more sources",string,NA,,"[REQUIRE][ELEMENT_OF('PLANT', 'taxonID', 'T')][ASCII]","[REQUIRE][ELEMENT_OF('PLANT', 'taxonID', 'T']"
vst_mappingandtagging,identificationReferences,"A list of sources (concatenated and semicolon separated) used to derive the specific taxon concept; including field guide editions, books, or versions of NEON keys used",string,NA,,"[ASCII]",
vst_mappingandtagging,morphospeciesID,"Identifier for morphospecies",string,NA,,"[ASCII]","[FROM_TABLE][SEE_ATBD]"
vst_mappingandtagging,morphospeciesIDRemarks,"Technician notes about the morphospecies; free text comments accompanying the record",string,NA,,"[ASCII]","[ASCII]"
vst_mappingandtagging,identificationQualifier,"A standard term to express the determiner's doubts about the Identification",string,NA,,"[LOV][ASCII]","[LOV]"
vst_mappingandtagging,initialBandStemDiameter,"Cross sectional diameter at the time dendrometer band is installed",real,centimeter,,"[IF (recordType='band'), REQUIRE][IF (recordType != 'band'), REQUIRE_NULL][GREATER_THAN_OR_EQUAL_TO(5)][LESS_THAN(250)]","[IF recordType='band', REQUIRE][IF recordType != 'band' REQUIRE_NULL]"
vst_mappingandtagging,dendrometerHeight,"Distance along stem at which dendrometer band is installed",real,centimeter,,"[IF (recordType='band'), REQUIRE][IF (recordType != 'band'), REQUIRE_NULL][LESS_THAN(200)][GREATER_THAN(30)]","[IF recordType='band', REQUIRE][IF recordType != 'band' REQUIRE_NULL]"
vst_mappingandtagging,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII]","[IF(taxonID=='OTHE', [REQUIRE]][ASCII]"
vst_mappingandtagging,measuredBy,"An identifier for the technician who measured or collected the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
vst_mappingandtagging,recordedBy,"An identifier for the technician who recorded the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
vst_mappingandtagging,dataQF,"Data quality flag",string,NA,,"[ASCII]",
vst_non-woody,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
vst_non-woody,startDate,"The start date-time or interval during which an event occurred",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE]","[REQUIRE][SUGGESTED_ENTRY(systemDate)][DATE_FORMAT(YYYY-MM-DD)]"
vst_non-woody,endDate,"The end date-time or interval during which an event occurred",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE]","[REQUIRE][SUGGESTED_ENTRY(vst_non-woody_in:startDate)]"
vst_non-woody,eventID,"An identifier for the set of information associated with the event, which includes information about the place and time of the event",string,NA,,"[ASCII]","[FROM_TABLE(vst_perplotperyear_in)][SUGGESTED_ENTRY(previousValue)]"
vst_non-woody,plotID,"Plot identifier (NEON site code_XXX)",string,NA,,"[REQUIRE][NAMED_LOCATION_TYPE('OS Plot - vst')]","[REQUIRE][NAMED_LOCATION_TYPE('OS Plot - vst')]"
vst_non-woody,subplotID,"Identifier for the NEON subplot",string,NA,,"[LOV][ASCII]","[LOV]"
vst_non-woody,nestedSubplotID,"Numeric identifier for nested subplot ID within a subplotID",string,NA,,"[LOV][ASCII]","[LOV]"
vst_non-woody,tagID,"Domain-level unique identifier of tag used to mark the individual",string,NA,,"[ASCII]","[FROM_TABLE][SEE_ATBD]"
vst_non-woody,individualID,"Domain-level unique identifier for an individual: NEON.MOD.D##.######",string,NA,,"[REQUIRE][MIGHT_EXIST][ASCII]","[FROM_TABLE] [IF(tagStatus='notRequired'), â€œTEMP.PLA.SITE.yearBoutBegan.NN###  ] NN=plot number, ### = user defined incremented value"
vst_non-woody,individualBarcode,"Barcode for a tagged individual",string,NA,,"[ASCII]","[HIDDEN]"
vst_non-woody,individualFate,"Fate of a tagged individual",string,NA,,"[ASCII]","[DEFAULT_TO('released')][HIDDEN]"
vst_non-woody,tagStatus,"Description of state or condition of the physical tag",string,NA,,"[LOV][ASCII]","[LOV]"
vst_non-woody,growthForm,"The growth form classification",string,NA,,"[LOV][ASCII]","[LOV]"
vst_non-woody,taxonID,"Species code, based on one or more sources",string,NA,,"[REQUIRE][ASCII][REQUIRE][ELEMENT_OF('PLANT', 'taxonID', 'T')]","[REQUIRE][ELEMENT_OF('PLANT', 'taxonID', 'T'][SUGGESTED_ENTRY(vst_mapping_in:taxonID)]"
vst_non-woody,identificationReferences,"A list of sources (concatenated and semicolon separated) used to derive the specific taxon concept; including field guide editions, books, or versions of NEON keys used",string,NA,,"[ASCII]",
vst_non-woody,identificationQualifier,"A standard term to express the determiner's doubts about the Identification",string,NA,,"[LOV][ASCII]","[LOV]"
vst_non-woody,morphospeciesID,"Identifier for morphospecies",string,NA,,"[ASCII]","[FROM_TABLE][SEE_ATBD]"
vst_non-woody,morphospeciesIDRemarks,"Technician notes about the morphospecies; free text comments accompanying the record",string,NA,,"[ASCII]","[ASCII]"
vst_non-woody,shape,"Description of three dimensional form",string,NA,,"[LOV][ASCII]","[LOV]"
vst_non-woody,plantStatus,"Physical status of individual: live, dead, lost",string,NA,,"[LOV][ASCII]","[LOV]"
vst_non-woody,leafNumber,"The total number of leaves on an individual plant",unsigned integer,number,,"[GREATER_THAN(0)]","[GREATER_THAN(30)]"
vst_non-woody,meanLeafLength,"The average length of a typical leaf on the individual plant being measured",real,centimeter,,"[LESS_THAN(300)]","[GREATER_THAN(30)][LESS_THAN(300)]"
vst_non-woody,meanPetioleLength,"The average length of a typical leaf or frond petiole, measured from the interstection with the stem to the base of the blade, lamina or first leaftet",real,centimeter,,"[GREATER_THAN(0)][LESS_THAN(300)]","[GREATER_THAN(0)][LESS_THAN(300)]"
vst_non-woody,meanBladeLength,"The average length of a typical leaf blade, measured from the top of the petiole to leaf tip",real,centimeter,,"[GREATER_THAN(0)][LESS_THAN(250)]","[GREATER_THAN(0)][LESS_THAN(250)]"
vst_non-woody,basalStemDiameter,"Cross-sectional stem diameter at base of stem",real,centimeter,,"[IF ! (growthForm IN('fern', 'xerophyllum')), (GREATER_THAN_OR_EQUAL_TO(1))][IF(growthForm IN ( 'fern', 'xerophyllum')), (GREATER_THAN(0))]","[IF(growhtForm!='fern'(GREATER_THAN_OR_EQUAL_TO(1))]"
vst_non-woody,meanBasalDiameter,"Average basal diameter of a group of stems",real,centimeter,,"[GREATER_THAN_OR_EQUAL_TO(1)]","[GREATER_THAN_OR_EQUAL_TO(1)]"
vst_non-woody,stemDiameter,"Cross-sectional stem diameter",real,centimeter,,"[GREATER_THAN_OR_EQUAL_TO(1)][LESS_THAN(400)]","[GREATER_THAN_OR_EQUAL_TO(1)][LESS_THAN(400)]"
vst_non-woody,stemLength,"The length of the stem to the base of the leaves",real,meter,,"[GREATER_THAN(0)][LESS_THAN(30)]","[GREATER_THAN(0)][LESS_THAN(30)]"
vst_non-woody,measurementHeight,"Height at which stemDiameter is measured",real,centimeter,,"[GREATER_THAN_OR_EQUAL_TO(0)][IF(SITE!='PUUM'), LESS_THAN_OR_EQUAL_TO(200)][IF(SITE='PUUM'), LESS_THAN_OR_EQUAL_TO(500)]","[GREATER_THAN_OR_EQUAL_TO(0)][IF(SITE!='PUUM'), LESS_THAN_OR_EQUAL_TO(200)][IF(SITE='PUUM'), LESS_THAN_OR_EQUAL_TO(500)]"
vst_non-woody,maxCrownDiameter,"Maximum crown diameter of the individual or patch",real,meter,,"[GREATER_THAN(0)]","[GREATER_THAN(0)]"
vst_non-woody,ninetyCrownDiameter,"Crown diameter perpendicular to maxDiameter",real,meter,,,"[LESS_THAN_OR_EQUAL_TO(maxDiameter)]"
vst_non-woody,height,"Highest point of an individual or average height of a patch",real,meter,,"[GREATER_THAN(0)][LESS_THAN(100)]","[GREATER_THAN(0)][LESS_THAN(100)]"
vst_non-woody,baseCrownHeight,"Height above the ground for the lowest portion of the crown",real,meter,,"[LESS_THAN(height)]","[LESS_THAN(height)]"
vst_non-woody,maxBaseCrownDiameter,"Maximum crown diameter, measured at ground level",real,meter,,"[GREATER_THAN(0)][LESS_THAN(20)]","[GREATER_THAN(0)][LESS_THAN_20]"
vst_non-woody,ninetyBaseCrownDiameter,"Crown diameter perpendicular to maxBaseCrownDiameter, measured at ground level",real,meter,,,"[LESS_THAN_OR_EQUAL_TO(maxBaseCrownDiameter)]"
vst_non-woody,canopyPosition,"Vertical status of an individual relative to its neighbors",string,NA,,"[LOV][ASCII]","[LOV]"
vst_non-woody,oldPadCount,"The number of cladodes produced in previous growing seasons",unsigned integer,number,,"[GREATER_THAN_OR_EQUAL_TO(0)]","[GREATER_THAN_OR_EQUAL_TO(0)]"
vst_non-woody,newPadCount,"The number of cladodes produced in the current growing season",unsigned integer,number,,"[GREATER_THAN_OR_EQUAL_TO(0)]","[GREATER_THAN_OR_EQUAL_TO(0)]"
vst_non-woody,padCountValidation,"Synthetic variable to check valid padCount values",unsigned integer,number,"[IF (shape='pad' & IS_BLANK(oldPadCount) & IS_BLANK(newPadCount) & tagStatus IN('ok', 'replaced', 'notRequired')), 0]","[NOT_MATCH_REGULAR_EXPRESSION('0')]",
vst_non-woody,stemCount,"Count of stems",real,number,,"[GREATER_THAN(0)]","[GREATER_THAN(0)]"
vst_non-woody,branchCount,"Count of branches",real,number,,"[GREATER_THAN_OR_EQUAL_TO(1)]","[GREATER_THAN_OR_EQUAL_TO(1)]"
vst_non-woody,meanBranchLength,"Average length of branches on an individual",real,meter,,"[GREATER_THAN(0)][LESS_THAN(20)]","[GREATER_THAN(0)][LESS_THAN(200)]"
vst_non-woody,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII]","[ASCII]"
vst_non-woody,measuredBy,"An identifier for the technician who measured or collected the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
vst_non-woody,recordedBy,"An identifier for the technician who recorded the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
vst_non-woody,dataQF,"Data quality flag",string,NA,,"[ASCII]",
vst_non-woody,fulcrumPrimaryKey,"Primary identifier for the record in Fulcrum at the same granularity for which the record occurs in the NEON database (i.e., one fulcrumPrimaryKey should map to a single record in the NEON database)",string,NA,,"[ASCII]",
vst_apparentindividual,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
vst_apparentindividual,startDate,"The start date-time or interval during which an event occurred",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE]","[REQUIRE][SUGGESTED_ENTRY(systemDate)][DATE_FORMAT(YYYY-MM-DD)]"
vst_apparentindividual,endDate,"The end date-time or interval during which an event occurred",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE]","[REQUIRE][SUGGESTED_ENTRY(startDate)]"
vst_apparentindividual,eventID,"An identifier for the set of information associated with the event, which includes information about the place and time of the event",string,NA,,"[ASCII]","[FROM_TABLE(vst_perplotperyear_in)][SUGGESTED_ENTRY(previousValue)]"
vst_apparentindividual,plotID,"Plot identifier (NEON site code_XXX)",string,NA,,"[REQUIRE][NAMED_LOCATION_TYPE('OS Plot - vst')]","[REQUIRE][NAMED_LOCATION_TYPE('OS Plot - vst')]"
vst_apparentindividual,tagID,"Domain-level unique identifier of tag used to mark the individual",string,NA,,"[ASCII]","[REQUIRE][FROM_TABLE][SEE_ATBD]"
vst_apparentindividual,individualID,"Domain-level unique identifier for an individual: NEON.MOD.D##.######",string,NA,,"[EXISTS][ASCII][REQUIRE]","[IF (taggedPlant = Y), FROM_TABLE(vst_mapping_in.individualID)][IF (taggedPlant = N), create tempID]"
vst_apparentindividual,individualBarcode,"Barcode for a tagged individual",string,NA,,"[ASCII]","[HIDDEN]"
vst_apparentindividual,individualFate,"Fate of a tagged individual",string,NA,,"[ASCII]","[DEFAULT_TO('released')][HIDDEN]"
vst_apparentindividual,tempStemID,"Stem-level identifier for a multi-stemmed individual with growth form of shrub, small shrub, sapling or small tree",string,NA,,"[MATCH_REGULAR_EXPRESSION('[0-9]{1,2}')]","[MATCH_REGULAR_EXPRESSION('[0-9]{1,2}')]"
vst_apparentindividual,tagStatus,"Description of state or condition of the physical tag",string,NA,,"[LOV][ASCII]","[LOV][SUGGESTED_ENTRY('ok')]"
vst_apparentindividual,growthForm,"The growth form classification",string,NA,,"[LOV][ASCII][IF !(plantStatus IN ('Removed', 'No longer qualifies', 'Lost, burned', 'Lost, herbivory', 'Lost, presumed dead', 'Lost, tag damaged', 'Lost, fate unknown', 'Downed')), REQUIRE]","[LOV][SUGGESTED_ENTRY(previousYearValue)]"
vst_apparentindividual,measurementStrategy,"Identifier for the selected method of measuring an individual",string,NA,,,"[LOV] Fulcrum only field to be ingested but not published"
vst_apparentindividual,plantStatus,"Physical status of individual: live, dead, lost",string,NA,,"[LOV][ASCII]","[LOV][REQUIRE]"
vst_apparentindividual,stemDiameter,"Cross-sectional stem diameter",real,centimeter,,"[IF(SITE IN ('HEAL','TOOL','BARR')), GREATER_THAN_OR_EQUAL_TO(0.5)][IF!(SITE  IN ('HEAL', 'TOOL','BARR')), GREATER_THAN_OR_EQUAL_TO(1)][LESS_THAN(250)]","[IF(IS_BLANK(basalStemDiameter)), REQUIRE][IF(SITE='HEAL' | 'TOOL' | 'BARR'), GREATER_THAN_OR_EQUAL_TO(0.5)][IF(SITE != 'HEAL' | 'TOOL' | 'BARR'), GREATER_THAN_OR_EQUAL_TO(1)][LESS_THAN(400)]"
vst_apparentindividual,changedMeasurementLocation,"Indicator for whether the measurement location on the individual changed from previous measurements",string,NA,,"[LOV][ASCII]","[LOV][DEFAULT_TO('noChange')]"
vst_apparentindividual,measurementHeight,"Height at which stemDiameter is measured",real,centimeter,,"[GREATER_THAN(0)][IF(SITE!='PUUM'), LESS_THAN_OR_EQUAL_TO(200)][IF(SITE='PUUM'), LESS_THAN_OR_EQUAL_TO(500)]","[GREATER_THAN(0)][IF(SITE!='PUUM'), LESS_THAN_OR_EQUAL_TO(200)][IF(SITE='PUUM'), LESS_THAN_OR_EQUAL_TO(500)]"
vst_apparentindividual,vdApexHeight,"Height from observer to highest crown point",real,meter,,"[GREATER_THAN_OR_EQUAL_TO(0.1)][LESS_THAN(125)]","[GREATER_THAN(0.1)][LESS_THAN_OR_EQUAL_TO(125)]"
vst_apparentindividual,vdBaseHeight,"Height from observer to base of stem",real,meter,,"[LESS_THAN(vdApexHeight)]","[IF(vdApexHeight !=NULL), REQUIRE][LESS_THAN(vdApexHeight)]"
vst_apparentindividual,vdApexBreakHeight,"Height from observer to the highest point along a broken bole",real,meter,,"[GREATER_THAN(0.1)][LESS_THAN(125)]","[GREATER_THAN(0.1)][LESS_THAN(125)]"
vst_apparentindividual,vdBaseBreakHeight,"Height from observer to the base of a broken bole",real,meter,,"[LESS_THAN(vdApexBreakHeight)]","[IF(vdApexBreakHeight != NULL), REQUIRE][LESS_THAN(vdApexBreakHeight)]"
vst_apparentindividual,height,"Highest point of an individual or average height of a patch",real,meter,"[vdApexHeight-vdBaseHeight]",,"[HIDDEN]"
vst_apparentindividual,breakHeight,"Height from the ground to the highest point along a broken bole",real,meter,"[vdApexBreakHeight-vdBaseBreakHeight]",,"[HIDDEN]"
vst_apparentindividual,baseCrownHeight,"Height above the ground for the lowest portion of the crown",real,meter,,"[LESS_THAN(height)]","[LESS_THAN(height)]"
vst_apparentindividual,maxCrownDiameter,"Maximum crown diameter of the individual or patch",real,meter,,"[GREATER_THAN(0)]","[GREATER_THAN(0)]"
vst_apparentindividual,ninetyCrownDiameter,"Crown diameter perpendicular to maxDiameter",real,meter,,,"[LESS_THAN_OR_EQUAL_TO(maxCrownDiameter)]"
vst_apparentindividual,breakDiameter,"Cross-sectional diameter at the break point along a broken bole",real,centimeter,,"[GREATER_THAN(0)][LESS_THAN(400)]","[GREATER_THAN(0)][LESS_THAN(400)]"
vst_apparentindividual,canopyPosition,"Vertical status of an individual relative to its neighbors",string,NA,,"[LOV][ASCII]","[LOV]"
vst_apparentindividual,shape,"Description of three dimensional form",string,NA,,"[LOV][ASCII]","[LOV]"
vst_apparentindividual,basalStemDiameter,"Cross-sectional stem diameter at base of stem",real,centimeter,,"[GREATER_THAN(0)][IF(SITE!='SRER'), LESS_THAN_OR_EQUAL_TO(30)][IF(SITE='SRER'), LESS_THAN_OR_EQUAL_TO(100)]","[IF(IS_BLANK(stemDiameter)), REQUIRE][GREATER_THAN(0)][LESS_THAN_OR_EQUAL_TO(30)]"
vst_apparentindividual,basalStemDiameterMsrmntHeight,"Height at which basalStemDiameter is measured",real,centimeter,,"[GREATER_THAN(0)][LESS_THAN(100)]","[GREATER_THAN(0)][LESS_THAN(100)]"
vst_apparentindividual,maxBaseCrownDiameter,"Maximum crown diameter, measured at ground level",real,meter,,"[GREATER_THAN(0)]","[GREATER_THAN(0)][LESS_THAN(maxCrownDiameter)]"
vst_apparentindividual,ninetyBaseCrownDiameter,"Crown diameter perpendicular to maxBaseCrownDiameter, measured at ground level",real,meter,,"[GREATER_THAN(0)]","[LESS_THAN(maxCrownDiameter)]"
vst_apparentindividual,dendrometerInstallationDate,"The date the dendrometer band was installed on the individual",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[IF (IS_NOT_BLANK(dendrometerGap)), REQUIRE]","[IF (IS_NOT_BLANK(dendrometerGap), REQUIRE] **Passed from mapping and tagging app**"
vst_apparentindividual,initialGapMeasurementDate,"The date the dendrometer gap is first measured after installation",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[IF (IS_NOT_BLANK(dendrometerGap)), REQUIRE]","[IF (IS_NOT_BLANK(dendrometerGap), REQUIRE] **Passed from mapping and tagging app**"
vst_apparentindividual,initialBandStemDiameter,"Cross sectional diameter at the time dendrometer band is installed",real,centimeter,,"[IF (IS_NOT_BLANK(dendrometerGap)), REQUIRE]","[IF (IS_NOT_BLANK(dendrometerGap), REQUIRE] **Passed from mapping and tagging app**"
vst_apparentindividual,initialDendrometerGap,"Initial width of the measurement window",real,millimeter,,"[IF (IS_NOT_BLANK(dendrometerGap)), REQUIRE]","[IF (IS_NOT_BLANK(dendrometerGap), REQUIRE] **Passed from mapping and tagging app**"
vst_apparentindividual,dendrometerHeight,"Distance along stem at which dendrometer band is installed",real,centimeter,,"[IF (IS_NOT_BLANK(dendrometerGap)), REQUIRE]","[IF (IS_NOT_BLANK(dendrometerGap), REQUIRE] **Passed from mapping and tagging app**"
vst_apparentindividual,dendrometerGap,"Width of dendrometer measurement window",real,millimeter,,"[LESS_THAN(100)]","[LESS_THAN(100)]"
vst_apparentindividual,dendrometerCondition,"Condition of the dendrometer band",string,NA,,"[LOV][ASCII][IF (IS_NOT_BLANK(dendrometerGap)), REQUIRE]","[LOV][ASCII][IF (IS_NOT_BLANK(dendrometerGap), REQUIRE]"
vst_apparentindividual,bandStemDiameter,"Calculated current year diameter at band location",real,centimeter,"[((initialBandStemDiameter * PI)+((dendrometerGap-initialDendrometerGap)/10))/ PI]",,
vst_apparentindividual,nullFieldValidation,"Synthetic field to verify data are present in minimum required fields",real,NA,"[COUNT(stemDiameter, basalStemDiameter, vdApexHeight, height, maxCrownDiameter, ninetyCrownDiameter, dendrometerGap)]","[IF !(plantStatus IN ('Removed', 'No longer qualifies', 'Lost, burned', 'Lost, herbivory', 'Lost, presumed dead', 'Lost, tag damaged', 'Lost, fate unknown', 'Downed'))& !(growthForm ='sms') & !(tagStatus IN ('removed', 'mislabeled')), REQUIRE][IF !(plantStatus IN ('Removed', 'No longer qualifies', 'Lost, burned', 'Lost, herbivory', 'Lost, presumed dead', 'Lost, tag damaged', 'Lost, fate unknown', 'Downed')) & !(growthForm ='sms') & !(tagStatus IN ('removed', 'mislabeled') & startDate > '2017-06-01T00:00'), GREATER_THAN(0)]",
vst_apparentindividual,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII]","[IF(status lovElementCode = 1:8), REQUIRE]"
vst_apparentindividual,recordedBy,"An identifier for the technician who recorded the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
vst_apparentindividual,measuredBy,"An identifier for the technician who measured or collected the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
vst_apparentindividual,dataQF,"Data quality flag",string,NA,"[IF MATCH_REGULAR_EXPRESSION(eventID, '_2014|_2015|_2016|_2017'), DEFAULT_TO('legacyData')]","[ASCII]",
vst_apparentindividual,fulcrumPrimaryKey,"Primary identifier for the record in Fulcrum at the same granularity for which the record occurs in the NEON database (i.e., one fulcrumPrimaryKey should map to a single record in the NEON database)",string,NA,,"[ASCII]",
cfc_fieldData,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
cfc_fieldData,plotID,"Plot identifier (NEON site code_XXX)",string,NA,,"[REQUIRE][NAMED_LOCATION_TYPE('OS Plot - cfc')]","[REQUIRE][NAMED_LOCATION_TYPE('OS Plot - cfc')]"
cfc_fieldData,samplingProtocolVersion,"The NEON document number and version where detailed information regarding the sampling method used is available; format NEON.DOC.######vX",string,NA,,"[LOV]","[LOV]"
cfc_fieldData,collectedBy,"An identifier for the technician who collected the sample or specimen",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
cfc_fieldData,recordedBy,"An identifier for the technician who recorded the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
cfc_fieldData,setDate,"Date that trap was set",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE]","[HIDDEN][DEFAULT_TO('collectDate')]"
cfc_fieldData,collectDate,"Date of the collection event",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE]","[REQUIRE][DATE_FORMAT('YYYY-MM-DDTHH:MM')]"
cfc_fieldData,aopCollectDate,"Date that remote sensing data from the NEON AOP were collected for the sample",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[ASCII]",
cfc_fieldData,sampleType,"Type of sample",string,NA,,"[REQUIRE][LOV]","[REQUIRE][LOV]"
cfc_fieldData,samplingImpractical,"Samples and/or measurements were not collected due to the indicated circumstance",string,NA,,"[IF(collectDate > 2020-01-01T00:00), REQUIRE][LOV]","[IF (sampleType = 'Woody individual'), HIDDEN & DEFAULT_TO('OK')][IF (sampleType = 'Herbaceous clip strip'), LOV ('OK', 'location flooded', 'location burned', 'logistical', 'management', 'other') & SUGGESTED_ENTRY('OK')]"
cfc_fieldData,subplotID,"Identifier for the NEON subplot",string,NA,,"[IF (sampleType = 'Herbaceous clip strip'), REQUIRE][LOV]","[IF (sampleType = 'Herbaceous clip strip'), REQUIRE][LOV]"
cfc_fieldData,sampleNumber,"Number of sample collected",unsigned integer,NA,,"[GREATER_THAN_OR_EQUAL_TO(1)][LESS_THAN_OR_EQUAL_TO(10)]","[IF (samplingImpractical= 'OK'), REQUIRE][GREATER_THAN_OR_EQUAL_TO(1)][LESS_THAN_OR_EQUAL_TO(10)]"
cfc_fieldData,samplingMethod,"Name or code for the method used to collect or test a sample",string,NA,,"[LOV]","[IF (samplingImpractical= 'OK'), REQUIRE][IF (sampleType = 'Woody individual'), LOV][IF (sampleType = 'Herbaceous clip strip'), 'clippers']"
cfc_fieldData,vstTag,"Indicator for whether a tagID is associated with vegetation structure measurements",string,NA,,"[IF (sampleType = 'Woody individual'), REQUIRE][LOV]","[IF (sampleType = 'Woody individual'), REQUIRE][IF (sampleType = 'Herbaceous clip strip'), HIDDEN]"
cfc_fieldData,tagID,"Domain-level unique identifier of tag used to mark the individual",string,NA,,"[IF (sampleType = 'Woody individual'), REQUIRE][ASCII]","[IF (sampleType = 'Woody individual'), REQUIRE][IF (sampleType = 'Herbaceous clip strip'), HIDDEN]"
cfc_fieldData,individualID,"Domain-level unique identifier for an individual: NEON.MOD.D##.######",string,NA,,"[IF (sampleType = 'Woody individual'), REQUIRE][EXISTS]","[IF (sampleType = 'Woody individual'), REQUIRE][IF (sampleType = 'Herbaceous clip strip'), HIDDEN]"
cfc_fieldData,individualFate,"Fate of a tagged individual",string,NA,,"[ASCII]","[HIDDEN][DEFAULT_TO('released')]"
cfc_fieldData,individualCode,"Barcode of an individual",string,NA,,"[ASCII]","[HIDDEN]"
cfc_fieldData,taxonID,"Species code, based on one or more sources",string,NA,,"[IF (sampleType = 'Woody individual'), REQUIRE][ELEMENT_OF('PLANT','taxonID','T')][ASCII]","[IF (sampleType = 'Woody individual'), REQUIRE][IF (sampleType = 'Herbaceous clip strip'), HIDDEN]"
cfc_fieldData,plantStatus,"Physical status of individual: live, dead, lost",string,NA,,"[IF (sampleType = 'Woody individual'), REQUIRE][LOV]","[IF (sampleType = 'Woody individual'), REQUIRE][IF (sampleType = 'Herbaceous clip strip'), HIDDEN]"
cfc_fieldData,canopyPosition,"Vertical status of an individual relative to its neighbors",string,NA,,"[LOV]","[IF (sampleType = 'Woody individual'), REQUIRE][LOV(opts 1-4)]"
cfc_fieldData,canopyStatus,"Canopy status of an individual relative to its neighbors",string,NA,,"[LOV]","[IF (sampleType = 'Woody individual'), REQUIRE][LOV]"
cfc_fieldData,clipCellNumber,"A numeric identifier for the clip-harvest cell in which herbaceous biomass was sampled",unsigned integer,NA,,"[IF (sampleType = 'Herbaceous clip strip' & samplingImpractical = 'OK'), REQUIRE][IF (sampleType = 'Herbaceous clip strip' & IS_BLANK(samplingImpractical)), REQUIRE][GREATER_THAN_OR_EQUAL_TO(1)][LESS_THAN(1000)]","[IF (sampleType = 'Herbaceous clip strip' & samplingImpractical= 'OK'),REQUIRE][GREATER_THAN_OR_EQUAL_TO(1)][LESS_THAN(1000)][IF (sampleType = 'Woody individual'), HIDDEN]"
cfc_fieldData,clipID,"Unique identifier for the clip-harvest location within the plot",string,NA,,"[IF (sampleType = 'Herbaceous clip strip' & samplingImpractical = 'OK'), REQUIRE][IF (sampleType = 'Herbaceous clip strip' & IS_BLANK(samplingImpractical)), REQUIRE][ASCII]","[IF (sampleType = 'Herbaceous clip strip' & samplingImpractical= 'OK'),REQUIRE][CONCATENATE(plotID + '_' + clipCellNumber)][HIDDEN]"
cfc_fieldData,clipLength,"The length of the clip-harvest area in meters",real,meter,,,"[HIDDEN][FROM_TABLE]"
cfc_fieldData,clipWidth,"The width of the clip-harvest area in meters",real,meter,,,"[HIDDEN][FROM_TABLE]"
cfc_fieldData,percentCoverClip,"Ocular estimate of percent cover of all vegetation in the clip strip",real,percent,,"[GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(100)]","[IF (sampleType = 'Woody individual'), HIDDEN][IF (sampleType = 'Herbaceous clip strip' & samplingImpractical= 'OK'),REQUIRE][GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(100)]"
cfc_fieldData,toxicodendronPossible,"Indicator for whether a sample may contain Toxicodendron spp",string,NA,,"[LOV]","[IF (sampleType = 'Woody individual'), HIDDEN][IF (sampleType = 'Herbaceous clip strip' & samplingImpractical= 'OK'),REQUIRE][LOV]"
cfc_fieldData,sampleID,"Identifier for sample",string,NA,,"[IF(IS_BLANK(sampleCode) & samplingImpractical = 'OK'), REQUIRE][IF(IS_BLANK(sampleCode) & IS_BLANK(samplingImpractical)), REQUIRE][DOES_NOT_EXIST][ASCII]","[IF (samplingImpractical= 'OK'), REQUIRE][CASE sampleType ='Herbaceous clip strip' =>'cfc.' & plotID & '.CLIP-' & sampleNumber & '.' & collectDate; CASE sampleType ='Woody individual' =>'cfc.' & plotID & '.' & taxonID & '-' & sampleNumber & '.' & collectDate]"
cfc_fieldData,sampleFate,"Fate of a sample",string,NA,,"[ASCII]","[HIDDEN][[IF (samplingImpractical= 'OK'), DEFAULT_TO('active')]"
cfc_fieldData,sampleCode,"Barcode of a sample",string,NA,,"[ASCII]",
cfc_fieldData,sampleCondition,"Condition of a sample",string,NA,,"[LOV]","[IF (samplingImpractical= 'OK'), DEFAULT_TO('OK')][LOV]"
cfc_fieldData,chlorophyllSampleID,"Identifier for a chlorophyll sample",string,NA,,"[IF(IS_BLANK(sampleCode) & samplingImpractical = 'OK'), REQUIRE][IF(IS_BLANK(sampleCode) & IS_BLANK(samplingImpractical)), REQUIRE][DOES_NOT_EXIST][ASCII]","[IF (samplingImpractical= 'OK'), REQUIRE][sampleID & '.chl']"
cfc_fieldData,chlorophyllSampleFate,"Fate of a chlorophyll sample",string,NA,,"[LOV]","[IF (samplingImpractical= 'OK'), DEFAULT_TO('active')][LOV]"
cfc_fieldData,chlorophyllSampleCode,"Barcode of a chlorophyll sample",string,NA,,"[ASCII]",
cfc_fieldData,chlorophyllSampleCondition,"Condition of a chlorophyll sample",string,NA,,"[LOV]","[IF (samplingImpractical= 'OK'), DEFAULT_TO('OK')][LOV]"
cfc_fieldData,vd1Sample,"Vertical distance from observer to height of first canopy subsample",real,meter,,"[GREATER_THAN(0)][LESS_THAN(100)]","[IF (sampleType = 'Woody individual'), REQUIRE][IF (sampleType = 'Herbaceous clip strip'), HIDDEN][GREATER_THAN(0)][LESS_THAN(100)]"
cfc_fieldData,vd1BaseHeight,"Vertical distance from observer to base of stem for first canopy subsample",real,meter,,"[GREATER_THAN(50-)][LESS_THAN(20)]","[IF (sampleType = 'Woody individual'), REQUIRE][IF (sampleType = 'Herbaceous clip strip'), HIDDEN][GREATER_THAN(50-)][LESS_THAN(20)]"
cfc_fieldData,subsample1Height,"Vertical distance from ground to height of first canopy subsample",real,meter,"[vd1Sample - vd1BaseHeight]",,
cfc_fieldData,vd2Sample,"Vertical distance from observer to height of second canopy subsample",real,meter,,"[GREATER_THAN(0)][LESS_THAN(100)]","[IF (sampleType = 'Herbaceous clip strip'), HIDDEN][GREATER_THAN(0)][LESS_THAN(100)]"
cfc_fieldData,vd2BaseHeight,"Vertical distance from observer to base of stem for second canopy subsample",real,meter,,"[GREATER_THAN(50-)][LESS_THAN(20)]","[IF (sampleType = 'Herbaceous clip strip'), HIDDEN][GREATER_THAN(50-)][LESS_THAN(20)]"
cfc_fieldData,subsample2Height,"Vertical distance from ground to height of second canopy subsample",real,meter,"[vd2Sample - vd2BaseHeight]",,
cfc_fieldData,vd3Sample,"Vertical distance from observer to height of third canopy leaf subsample",real,meter,,"[GREATER_THAN(0)][LESS_THAN(100)]","[IF (sampleType = 'Herbaceous clip strip'), HIDDEN][GREATER_THAN(0)][LESS_THAN(100)]"
cfc_fieldData,vd3BaseHeight,"Vertical distance from observer to base of stem for third canopy leaf subsample",real,meter,,"[GREATER_THAN(50-)][LESS_THAN(20)]","[IF (sampleType = 'Herbaceous clip strip'), HIDDEN][GREATER_THAN(50-)][LESS_THAN(20)]"
cfc_fieldData,subsample3Height,"Vertical distance from ground to height of third canopy subsample",real,meter,"[vd3Sample - vd3BaseHeight]",,
cfc_fieldData,crownPolygonID,"Identifier for a crown polygon",string,NA,,"[ASCII]","[siteID + '.' + tagID + '.' + collectYear]"
cfc_fieldData,crownPolygonConfidence,"Field assessment of confidence level in a crown polygon",string,NA,,"[LOV]","[LOV][If (crownPolygon = 'yes', REQUIRE]"
cfc_fieldData,shapefileID,"Identifier for the shapefile that contains the crown polygon",string,NA,,"[ASCII]","[HIDDEN][siteID + '-' + collectYear + '-' + 'polygons']"
cfc_fieldData,bagCount,"A per clipID count of sample bags transported from the field to the laboratory for processing",unsigned integer,number,,,"[IF (sampleType = 'Woody individual'), HIDDEN][IF (sampleType = 'Herbaceous clip strip' & samplingImpractical= 'OK'), WARN]"
cfc_fieldData,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII]","[ASCII][IF (sampleCondition ! = 'OK'), REQUIRE][IF (chlorophyllSampleCondition ! = 'OK'), REQUIRE]"
cfc_fieldData,fulcrumVersion,"Version of the Fulcrum application used during data entry",string,NA,,"[ASCII]",
cfc_fieldData,platformInfo,"Operating System and browser information (where applicable) of computer used during data entry",string,NA,,"[ASCII]",
cfc_fieldData,dataQF,"Data quality flag",string,NA,,"[ASCII]",
cfc_fieldData,fulcrumPrimaryKey,"Primary identifier for the record in Fulcrum at the same granularity for which the record occurs in the NEON database (i.e., one fulcrumPrimaryKey should map to a single record in the NEON database)",string,NA,,"[ASCII]",
sls_soilCoreCollection,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
sls_soilCoreCollection,plotID,"Plot identifier (NEON site code_XXX)",string,NA,,"[NAMED_LOCATION_TYPE('OS Plot - bgc')]","[REQUIRE][NAMED_LOCATION_TYPE('OS plot - bgc')]"
sls_soilCoreCollection,nTransBoutType,"Category of bout in relation to nitrogen transformation sample collection",string,NA,,"[LOV]","[REQUIRE][LOV][SUGGESTED_ENTRY(previousValue)]"
sls_soilCoreCollection,samplingImpractical,"Samples and/or measurements were not collected due to the indicated circumstance",string,NA,,"[LOV]","[REQUIRE][LOV][SUGGESTED_ENTRY('OK')]"
sls_soilCoreCollection,incubationMethod,"Method used for soil incubation",string,NA,,"[LOV]","[REQUIRE][LOV][IF(nTransBoutType != 'Tfinal'), DEFAULT_TO('no incubation')][IF(samplingImpractical != 'OK'), REQUIRE_NULL]"
sls_soilCoreCollection,incubationCondition,"Condition of incubated nitrogen transformation sample upon retrieval",string,NA,,"[LOV]","[LOV][IF(nTransBoutType != 'Tfinal'), HIDDEN)][IF(samplingImpractical != 'OK'), REQUIRE_NULL]"
sls_soilCoreCollection,boutType,"Type of analyses that will be conducted on samples collected during the bout",string,NA,,"[LOV]","[REQUIRE][LOV][SUGGESTED_ENTRY(previousValue)]"
sls_soilCoreCollection,sampleTiming,"Timing of the sampling event with regard to the field season",string,NA,,"[LOV]","[REQUIRE][LOV][SUGGESTED_ENTRY(previousValue)]"
sls_soilCoreCollection,eventID,"An identifier for the set of information associated with the event, which includes information about the place and time of the event",string,NA,,"[ASCII]","[EQUALS(siteID+'.'+sampleTiming+'.'+collectYear)]"
sls_soilCoreCollection,biophysicalCriteria,"An indicator of whether sampling coincided with the intended biophysical conditions",string,NA,,"[LOV]","[LOV][REQUIRE]"
sls_soilCoreCollection,standingWaterDepth,"Depth of standing water present at a sampling location",real,centimeter,,"[GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(300)]","[IF(samplingImpractical = 'OK'), REQUIRE][SUGGESTED_ENTRY(0)][GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(100)][IF(samplingImpractical != 'OK'), REQUIRE_NULL]"
sls_soilCoreCollection,subplotID,"Identifier for the NEON subplot",string,NA,,"[LOV]","[LOV][REQUIRE]"
sls_soilCoreCollection,coreCoordinateX,"x location of the soil core relative to the SW corner",real,meter,,"[GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(40)]","[IF(samplingImpractical = 'OK'), REQUIRE][GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(40)][IF(samplingImpractical != 'OK'), REQUIRE_NULL]"
sls_soilCoreCollection,coreCoordinateY,"y location of the soil core relative to the SW corner",real,meter,,"[GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(40)]","[IF(samplingImpractical = 'OK'), REQUIRE][GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(40)][IF(samplingImpractical != 'OK'), REQUIRE_NULL]"
sls_soilCoreCollection,setDate,"Date that trap was set",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,"[IF(nTransBoutType != 'Tfinal'), DEFAULT_TO('collectDate')]"
sls_soilCoreCollection,collectDate,"Date of the collection event",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,"[DATE_FORMAT(YYYYMMDDTHH:MM)]"
sls_soilCoreCollection,toxicodendronPossible,"Indicator for whether a sample may contain Toxicodendron spp",string,NA,,"[LOV]","[LOV][IF(samplingImpractical != 'OK'), REQUIRE_NULL]"
sls_soilCoreCollection,soilTemp,"In-situ temperature of soil at approximately 10 cm depth",real,degree,,"[GREATER_THAN_OR_EQUAL_TO(20-)][IF SUBSTRING(plotID,1,4) IN ('SJER','JORN','SRER'), LESS_THAN_OR_EQUAL_TO(60)][IF !(SUBSTRING(plotID,1,4)IN('SJER','JORN','SRER')), LESS_THAN_OR_EQUAL_TO(40)]","[IF(standingWaterDepth=0),REQUIRE][IF(sampleFate !='lost), REQUIRE][GREATER_THAN_OR_EQUAL_TO(-20)][LESS_THAN_OR_EQUAL_TO(40)][IF(samplingImpractical != 'OK'), REQUIRE_NULL]"
sls_soilCoreCollection,litterDepth,"Depth of litter layer",real,centimeter,,"[GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(1000)]","[IF(standingWaterDepth=0),REQUIRE][IF(sampleFate !='lost), REQUIRE][GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(500)][IF(samplingImpractical != 'OK'), REQUIRE_NULL]"
sls_soilCoreCollection,sampleTopDepth,"Depth below the soil surface of the top of a soil sample",real,centimeter,,"[GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(100)]","[IF(sampleFate !='lost), REQUIRE][GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(100)][IF(samplingImpractical != 'OK'), REQUIRE_NULL]"
sls_soilCoreCollection,sampleBottomDepth,"Depth below the soil surface of the bottom of a soil sample",real,centimeter,,"[GREATER_THAN_OR_EQUAL_TO(sampleTopDepth)][LESS_THAN_OR_EQUAL_TO(100)]","[IF(sampleFate !='lost), REQUIRE][GREATER_THAN_OR_EQUAL_TO('sampleTopDepth')][LESS_THAN_OR_EQUAL_TO(100)][IF(samplingImpractical != 'OK'), REQUIRE_NULL]"
sls_soilCoreCollection,horizon,"Organic or mineral soil",string,NA,,"[LOV]","[LOV][IF(samplingImpractical = 'OK'), REQUIRE][IF(samplingImpractical != 'OK'), REQUIRE_NULL]"
sls_soilCoreCollection,sampleID,"Identifier for sample",string,NA,,"[DOES_NOT_EXIST][IF(samplingImpractical='OK'), MATCH_REGULAR_EXPRESSION('[A-Z]{4}_[0-9]{3}-[M|O]')][IF(samplingImpractical='OK'), MATCH_REGULAR_EXPRESSION('-+([1-4]*[0-9]{1}-|[1-4]*[0-9]{1}.5-)+([1-4]*[0-9]{1}-|[1-4]*[0-9]{1}.5-)')][MATCH_REGULAR_EXPRESSION('20[0-9]{2}(0[1-9]|1[012])(0[1-9]|1[0-9]|2[0-9]|3[01])')]","[IF(samplingImpractical = 'OK'), DEFAULT_TO(plotID + horizon + coreCoordinateX + coreCoordinateY + collectDate)]"
sls_soilCoreCollection,sampleFate,"Fate of a sample",string,NA,,"[LOV]","[IF(nTransBoutType != 'Tfinal'), HIDDEN)][LOV('active', 'lost')][IF(nTransBoutType = 'Tfinal', SUGGESTED_ENTRY('active')]"
sls_soilCoreCollection,sampleCode,"Barcode of a sample",string,NA,,"[ASCII]",
sls_soilCoreCollection,soilSamplingDevice,"Type of soil collection device used for sampling",string,NA,,"[LOV]","[LOV][IF(samplingImpractical = 'OK'), WARN][IF(samplingImpractical != 'OK'), REQUIRE_NULL]"
sls_soilCoreCollection,soilCoreCount,"Number of soil cores combined per sample",unsigned integer,number,,"[GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(10)]","[IF(samplingImpractical = 'OK'), WARN][IF(samplingImpractical != 'OK'), REQUIRE_NULL][GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(10)]"
sls_soilCoreCollection,sampleExtent,"Extent of the soil sample relative to the local soil horizon conditions",string,NA,,"[LOV]","[LOV][IF(samplingImpractical = 'OK'), WARN][IF(samplingImpractical != 'OK'), REQUIRE_NULL]"
sls_soilCoreCollection,samplingProtocolVersion,"The NEON document number and version where detailed information regarding the sampling method used is available; format NEON.DOC.######vX",string,NA,,"[LOV]","[LOV][REQUIRE][SUGGESTED_ENTRY(previousValue)]"
sls_soilCoreCollection,geneticSampleID,"Identifier for the genetic sample",string,NA,,"[DOES_NOT_EXIST][MATCH_REGULAR_EXPRESSION('[A-Z]{4}_[0-9]{3}-[M|O]')][MATCH_REGULAR_EXPRESSION('-+([1-4]*[0-9]{1}-|[1-4]*[0-9]{1}.5-)+([1-4]*[0-9]{1}-|[1-4]*[0-9]{1}.5-)')][MATCH_REGULAR_EXPRESSION('20[0-9]{2}(0[1-9]|1[012])(0[1-9]|1[0-9]|2[0-9]|3[01])-(?i)gen')]","[IF(boutType = 'microbesBiomass|microbesBiomassBGC' AND samplingImpractical = 'OK'), REQUIRE][IF(samplingImpractical!='OK'), REQUIRE_NULL][EQUALS(sampleID + '-gen')]"
sls_soilCoreCollection,geneticSampleFate,"Fate of a genetic sample",string,NA,,"[IF (IS_NOT_BLANK(geneticSampleID)), REQUIRE][LOV]","[IF (IS_NOT_BLANK(geneticSampleID)), REQUIRE][IF(samplingImpractical!='OK', DEFAULT_TO(NULL))][SUGGESTED_ENTRY('active')][LOV('active','lost')]"
sls_soilCoreCollection,geneticSampleCode,"Barcode of a genetic sample",string,NA,,"[ASCII]",
sls_soilCoreCollection,geneticSampleCondition,"Condition of genetic sample storage or processing",string,NA,,"[LOV]","[IF(boutType = 'microbesBiomass|microbesBiomassBGC' AND samplingImpractical = 'OK'), REQUIRE][IF(samplingImpractical != 'OK'), REQUIRE_NULL][LOV][SUGGESTED_ENTRY('OK')]"
sls_soilCoreCollection,geneticSamplePrepMethod,"Preparation or preservation method for a genetic sample",string,NA,,"[LOV]","[IF(boutType = 'microbesBiomass|microbesBiomassBGC' AND samplingImpractical = 'OK'), REQUIRE][IF(samplingImpractical != 'OK'), REQUIRE_NULL][LOV][SUGGESTED_ENTRY('dry ice')]"
sls_soilCoreCollection,geneticArchiveSampleCount,"Number of subsamples collected for genetic archive",integer,number,,"[GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(5)]","[IF(boutType != 'field only' AND samplingImpractical = 'OK'), REQUIRE][IF(samplingImpractical!='OK'), REQUIRE_NULL][GREATER_THAN_OR_EQUAL_TO(1)][LESS_THAN_OR_EQUAL_TO(5)]"
sls_soilCoreCollection,geneticArchiveSample1ID,"Identifier for genetic archive subsample 1",string,NA,,"[DOES_NOT_EXIST][MATCH_REGULAR_EXPRESSION('[A-Z]{4}_[0-9]{3}-[M|O]')][MATCH_REGULAR_EXPRESSION('-+([1-4]*[0-9]{1}-|[1-4]*[0-9]{1}.5-)+([1-4]*[0-9]{1}-|[1-4]*[0-9]{1}.5-)')][MATCH_REGULAR_EXPRESSION('20[0-9]{2}(0[1-9]|1[012])(0[1-9]|1[0-9]|2[0-9]|3[01])-(?i)ga1')]","[IF(geneticArchiveSampleCount >= 1), EQUALS(sampleID + '-ga1')][IF(samplingImpractical != 'OK'), REQUIRE_NULL]"
sls_soilCoreCollection,geneticArchiveSample1Fate,"Fate of genetic archive subsample 1",string,NA,,"[IF (IS_NOT_BLANK(geneticArchiveSample1ID) OR IS_NOT_BLANK(geneticArchiveSample1Code)), REQUIRE][LOV]","[IF(boutType='microbes | microbesBGC | microbesBiomass | microbesBiomassBGC' AND samplingImpractical = 'OK'), SUGGESTED_ENTRY('active')][IF(geneticArchiveSampleCount>=1), REQUIRE][IF(samplingImpractical!='OK', DEFAULT_TO(NULL))][LOV('active','lost','consumed')]"
sls_soilCoreCollection,geneticArchiveSample1Code,"Barcode of genetic archive subsample 1",string,NA,,"[ASCII]",
sls_soilCoreCollection,geneticArchiveSample2ID,"Identifier for genetic archive subsample 2",string,NA,,"[DOES_NOT_EXIST][MATCH_REGULAR_EXPRESSION('[A-Z]{4}_[0-9]{3}-[M|O]')][MATCH_REGULAR_EXPRESSION('-+([1-4]*[0-9]{1}-|[1-4]*[0-9]{1}.5-)+([1-4]*[0-9]{1}-|[1-4]*[0-9]{1}.5-)')][MATCH_REGULAR_EXPRESSION('20[0-9]{2}(0[1-9]|1[012])(0[1-9]|1[0-9]|2[0-9]|3[01])-(?i)ga2')]","[IF(geneticArchiveSampleCount >= 2), EQUALS(sampleID + '-ga2')][IF(samplingImpractical != 'OK'), REQUIRE_NULL]"
sls_soilCoreCollection,geneticArchiveSample2Fate,"Fate of genetic archive subsample 2",string,NA,,"[IF (IS_NOT_BLANK(geneticArchiveSample2ID) OR IS_NOT_BLANK(geneticArchiveSample2Code)), REQUIRE][LOV]","[IF(boutType='microbes | microbesBGC | microbesBiomass | microbesBiomassBGC' AND samplingImpractical = 'OK'), SUGGESTED_ENTRY('active')][IF(geneticArchiveSampleCount>=1), REQUIRE][IF(samplingImpractical!='OK', DEFAULT_TO(NULL))][LOV('active','lost','consumed')]"
sls_soilCoreCollection,geneticArchiveSample2Code,"Barcode of genetic archive subsample 2",string,NA,,"[ASCII]",
sls_soilCoreCollection,geneticArchiveSample3ID,"Identifier for genetic archive subsample 3",string,NA,,"[DOES_NOT_EXIST][MATCH_REGULAR_EXPRESSION('[A-Z]{4}_[0-9]{3}-[M|O]')][MATCH_REGULAR_EXPRESSION('-+([1-4]*[0-9]{1}-|[1-4]*[0-9]{1}.5-)+([1-4]*[0-9]{1}-|[1-4]*[0-9]{1}.5-)')][MATCH_REGULAR_EXPRESSION('20[0-9]{2}(0[1-9]|1[012])(0[1-9]|1[0-9]|2[0-9]|3[01])-(?i)ga3')]","[IF(geneticArchiveSampleCount >= 3), EQUALS(sampleID + '-ga3')][IF(samplingImpractical != 'OK'), REQUIRE_NULL]"
sls_soilCoreCollection,geneticArchiveSample3Fate,"Fate of genetic archive subsample 3",string,NA,,"[IF (IS_NOT_BLANK(geneticArchiveSample3ID) OR IS_NOT_BLANK(geneticArchiveSample3Code)), REQUIRE][LOV]","[IF(boutType='microbes | microbesBGC | microbesBiomass | microbesBiomassBGC' AND samplingImpractical = 'OK'), SUGGESTED_ENTRY('active')][IF(geneticArchiveSampleCount>=1), REQUIRE][IF(samplingImpractical!='OK', DEFAULT_TO(NULL))][LOV('active','lost','consumed')]"
sls_soilCoreCollection,geneticArchiveSample3Code,"Barcode of genetic archive subsample 3",string,NA,,"[ASCII]",
sls_soilCoreCollection,geneticArchiveSample4ID,"Identifier for genetic archive subsample 4",string,NA,,"[DOES_NOT_EXIST][MATCH_REGULAR_EXPRESSION('[A-Z]{4}_[0-9]{3}-[M|O]')][MATCH_REGULAR_EXPRESSION('-+([1-4]*[0-9]{1}-|[1-4]*[0-9]{1}.5-)+([1-4]*[0-9]{1}-|[1-4]*[0-9]{1}.5-)')][MATCH_REGULAR_EXPRESSION('20[0-9]{2}(0[1-9]|1[012])(0[1-9]|1[0-9]|2[0-9]|3[01])-(?i)ga4')]","[IF(geneticArchiveSampleCount >= 4), EQUALS(sampleID + '-ga4')][IF(samplingImpractical != 'OK'), REQUIRE_NULL]"
sls_soilCoreCollection,geneticArchiveSample4Fate,"Fate of genetic archive subsample 4",string,NA,,"[IF (IS_NOT_BLANK(geneticArchiveSample4ID) OR IS_NOT_BLANK(geneticArchiveSample4Code)), REQUIRE][LOV]","[IF(boutType='microbes | microbesBGC | microbesBiomass | microbesBiomassBGC' AND samplingImpractical = 'OK'), SUGGESTED_ENTRY('active')][IF(geneticArchiveSampleCount>=1), REQUIRE][IF(samplingImpractical!='OK', DEFAULT_TO(NULL))][LOV('active','lost','consumed')]"
sls_soilCoreCollection,geneticArchiveSample4Code,"Barcode of genetic archive subsample 4",string,NA,,"[ASCII]",
sls_soilCoreCollection,geneticArchiveSample5ID,"Identifier for genetic archive subsample 5",string,NA,,"[DOES_NOT_EXIST][MATCH_REGULAR_EXPRESSION('[A-Z]{4}_[0-9]{3}-[M|O]')][MATCH_REGULAR_EXPRESSION('-+([1-4]*[0-9]{1}-|[1-4]*[0-9]{1}.5-)+([1-4]*[0-9]{1}-|[1-4]*[0-9]{1}.5-)')][MATCH_REGULAR_EXPRESSION('20[0-9]{2}(0[1-9]|1[012])(0[1-9]|1[0-9]|2[0-9]|3[01])-(?i)ga5')]","[IF(geneticArchiveSampleCount >= 5), EQUALS(sampleID + '-ga5')][IF(samplingImpractical != 'OK'), REQUIRE_NULL]"
sls_soilCoreCollection,geneticArchiveSample5Fate,"Fate of genetic archive subsample 5",string,NA,,"[IF (IS_NOT_BLANK(geneticArchiveSample5ID) OR IS_NOT_BLANK(geneticArchiveSample5Code)), REQUIRE][LOV]","[IF(boutType='microbes | microbesBGC | microbesBiomass | microbesBiomassBGC' AND samplingImpractical = 'OK'), SUGGESTED_ENTRY('active')][IF(geneticArchiveSampleCount>=1), REQUIRE][IF(samplingImpractical!='OK', DEFAULT_TO(NULL))][LOV('active','lost','consumed')]"
sls_soilCoreCollection,geneticArchiveSample5Code,"Barcode of genetic archive subsample 5",string,NA,,"[ASCII]",
sls_soilCoreCollection,geneticArchiveSamplePrepMethod,"Preparation or preservation method for a genetic archive sample",string,NA,,"[LOV]","[IF(boutType != 'field only' AND samplingImpractical = 'OK'), REQUIRE][IF(samplingImpractical!='OK'), REQUIRE_NULL][LOV][SUGGESTED_ENTRY('dry ice')]"
sls_soilCoreCollection,biomassID,"Identifier for biomass sample",string,NA,,"[DOES_NOT_EXIST][MATCH_REGULAR_EXPRESSION('[A-Z]{4}_[0-9]{3}-[M|O]')][MATCH_REGULAR_EXPRESSION('-+([1-4]*[0-9]{1}-|[1-4]*[0-9]{1}.5-)+([1-4]*[0-9]{1}-|[1-4]*[0-9]{1}.5-)')][MATCH_REGULAR_EXPRESSION('20[0-9]{2}(0[1-9]|1[012])(0[1-9]|1[0-9]|2[0-9]|3[01])-(?i)bm')]","[IF(boutType= 'microbesBiomass|microbesBiomassBGC'), REQUIRE][IF(samplingImpractical!='OK'), REQUIRE_NULL][EQUALS(sampleID +'-bm')]"
sls_soilCoreCollection,biomassFate,"Fate of biomass sample",string,NA,,"[IF (IS_NOT_BLANK(biomassID)), REQUIRE][LOV]","[IF(boutype != 'microbesBiomass|microbesBiomassBGC', HIDDEN][LOV][SUGGESTED_ENTRY('active')]"
sls_soilCoreCollection,biomassCode,"Barcode of biomass sample",string,NA,,"[ASCII]",
sls_soilCoreCollection,biomassSampleCondition,"Condition of a biomass sample during storage or processing",string,NA,,"[LOV]","[LOV][IF(samplingImpractical = 'OK'), REQUIRE][IF(samplingImpractical != 'OK'), REQUIRE_NULL][SUGGESTED_ENTRY('OK')]"
sls_soilCoreCollection,horizonDetails,"Qualifier for soil horizon designation",string,NA,,"[LOV]","[LOV][IF(samplingImpractical = 'OK'),REQUIRE][IF(samplingImpractical != 'OK'),REQUIRE_NULL][SUGGESTED_ENTRY('OK')]"
sls_soilCoreCollection,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII]","[ASCII]"
sls_soilCoreCollection,collectedBy,"An identifier for the technician who collected the sample or specimen",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
sls_soilCoreCollection,recordedBy,"An identifier for the technician who recorded the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
sls_soilCoreCollection,dataQF,"Data quality flag",string,NA,,"[ASCII]",
sls_soilCoreCollection,fulcrumPrimaryKey,"Primary identifier for the record in Fulcrum at the same granularity for which the record occurs in the NEON database (i.e., one fulcrumPrimaryKey should map to a single record in the NEON database)",string,NA,,"[ASCII]",
ltr_massdata,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
ltr_massdata,plotID,"Plot identifier (NEON site code_XXX)",string,NA,"[DERIVE_FROM_SAMPLE_TREE('ltr_fielddata_in.fieldSampleID')]","[NAMED_LOCATION_TYPE('OS Plot - ltr')]","[REQUIRE]"
ltr_massdata,trapID,"Identifier for trap",string,NA,,"[REQUIRE]","[REQUIRE][FROM_TABLE]"
ltr_massdata,weighDate,"Date that sample or subsample was weighed",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[IF(dryMass > 0 & collectDate> 2019-12-31T00:00), GREATER_THAN(ovenEndDate)]","[GREATER_THAN_OR_EQUAL_TO(ovenEndDate)][DATE_FORMAT(YYYY-MM-DD)]"
ltr_massdata,setDate,"Date that trap was set",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('ltr_fielddata_in.fieldSampleID')]",,
ltr_massdata,collectDate,"Date of the collection event",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('ltr_fielddata_in.fieldSampleID')]",,
ltr_massdata,ovenStartDate,"The date and time a sample was placed in the drying oven",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[GREATER_THAN_OR_EQUAL_TO(collectDate-12hr)]","[GREATER_THAN_OR_EQUAL_TO(collectDate)][DATE_FORMAT(YYYY-MM-DDTHH:MM)]"
ltr_massdata,ovenEndDate,"The date and time a sample was removed from the drying oven",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[IF (dryMass > 0), GREATER_THAN(ovenStartDate)]","[GREATER_THAN(ovenStartDate)][DATE_FORMAT(YYYY-MM-DDTHH:MM)]"
ltr_massdata,eventID,"An identifier for the set of information associated with the event, which includes information about the place and time of the event",string,NA,,"[IF(collectDate> 2020-05-01T00:00),REQUIRE][MATCH_REGULAR_EXPRESSION('LTR.20[0-9]{2}.[A-Z]{4}.[0-9]{2}')]","[CONCATENATE ('LTR.' + yearBoutBegan' + '.' + siteID + '.' + boutNumber )]"
ltr_massdata,fieldSampleID,"Unique identifier for a field sample",string,NA,,"[EXISTS][REQUIRE]","[REQUIRE]"
ltr_massdata,fieldSampleFate,"Fate of a field sample",string,NA,"[DEFAULT_TO('processed')]","[LOV][ASCII]","[IF (sampleCondition IN ('OK', 'Cold chain broken'), DEFAULT_TO('processed')][IF (sampleCondition ='lost'), DEFAULT_TO ('lost')][IF (sampleCondition = 'Compromised'), DEFAULT_TO('discarded')]"
ltr_massdata,fieldSampleBarcode,"Barcode of a field sample",string,NA,,,
ltr_massdata,sampleCondition,"Condition of a sample",string,NA,,"[IF (weighDate > 2020-03-01T00:00), REQUIRE][LOV][ASCII]",
ltr_massdata,massSampleID,"Identifier for a mass sample",string,NA,,"[MIGHT_EXIST][STARTS_WITH(fieldSampleID)][IF (sampleCondition IN ('OK' ,'Condition OK','Cold chain broken')), REQUIRE]",
ltr_massdata,massSampleFate,"Fate of a mass sample",string,NA,"[IF(IS_BLANK), DEFAULT_TO('discarded')]","[REQUIRE][LOV][ASCII]","[IF(biogeoSample !='Y') & IS_blank(massSampleFate), DEFAULT_TO('discarded')][If (biogeosample = 'Y',  DEFAULT_TO('active')]"
ltr_massdata,massSampleBarcode,"Barcode for a mass sample",string,NA,,,
ltr_massdata,samplingProtocolVersion,"The NEON document number and version where detailed information regarding the sampling method used is available; format NEON.DOC.######vX",string,NA,,"[LOV][ASCII]","[LOV]"
ltr_massdata,biogeoSample,"Sample selected for biogeochemical analyses",string,NA,,"[LOV][ASCII]","[REQUIRE][LOV]"
ltr_massdata,functionalGroup,"Functional group to which a sample belongs",string,NA,,"[LOV][ASCII]","[LOV]"
ltr_massdata,dryMass,"Oven-dried mass of sample or subsample",real,gram,,"[IF(massSampleFate !='lost'), REQUIRE][GREATER_THAN_OR_EQUAL_TO(0)]","[IF(massSampleFate !='lost'), REQUIRE][GREATER_THAN_OR_EQUAL_TO(0)]"
ltr_massdata,qaDryMass,"Indicates whether 'dryMass' value is associated with 'qa' measurement type",string,NA,,"[REQUIRE][LOV][ASCII]","[LOV]"
ltr_massdata,remarks,"Technician notes; free text comments accompanying the record",string,NA,,,
ltr_massdata,measuredBy,"An identifier for the technician who measured or collected the data",string,NA,,,"[FROM_PERSONNEL]"
ltr_massdata,dataQF,"Data quality flag",string,NA,,,
ltr_massdata,fulcrumPrimaryKey,"Primary identifier for the record in Fulcrum at the same granularity for which the record occurs in the NEON database (i.e., one fulcrumPrimaryKey should map to a single record in the NEON database)",string,NA,,"[ASCII]",
cfc_LMA,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
cfc_LMA,sampleID,"Identifier for sample",string,NA,,"[IF(IS_BLANK(sampleCode)), REQUIRE][EXISTS]","[REQUIRE]"
cfc_LMA,sampleFate,"Fate of a sample",string,NA,,"[ASCII]","[HIDDEN][DEFAULT_TO('active')]"
cfc_LMA,sampleCode,"Barcode of a sample",string,NA,,"[ASCII]",
cfc_LMA,plotID,"Plot identifier (NEON site code_XXX)",string,NA,"[DERIVE_FROM_SAMPLE_TREE('cfc_fieldData_in.sampleID')]","[NAMED_LOCATION_TYPE('OS Plot - cfc')]",
cfc_LMA,setDate,"Date that trap was set",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('cfc_fieldData_in.sampleID')]",,
cfc_LMA,collectDate,"Date of the collection event",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('cfc_fieldData_in.sampleID')]",,
cfc_LMA,lmaSampleID,"Identifier for a leaf mass per area sample",string,NA,,"[IF(IS_BLANK(lmaSampleCode)), REQUIRE][DOES_NOT_EXIST][ASCII]","[REQUIRE][sampleID & '.lma']"
cfc_LMA,lmaSampleFate,"Fate of a leaf mass per area sample",string,NA,,"[LOV]","[DEFAULT_TO('discarded')][LOV]"
cfc_LMA,lmaSampleCode,"Barcode of a leaf mass per area sample",string,NA,,"[ASCII]",
cfc_LMA,lmaSampleCondition,"Condition of a leaf mass per area sample",string,NA,,"[LOV]","[DEFAULT_TO('OK')][LOV]"
cfc_LMA,scanDate,"The date and time a sample is scanned",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[GREATER_THAN_OR_EQUAL_TO(collectDate)]","[DATE_FORMAT('YYYY-MM-DDTHH:MM')][GREATER_THAN_OR_EQUAL_TO(collectDate)]"
cfc_LMA,scannedBy,"An identifier for the technician who scanned the sample(s)",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
cfc_LMA,freshMass,"Total fresh mass of a sample",real,gram,,"[IF(lmaSampleCondition!= 'invalid fresh mass'), REQUIRE][IF(IS_NOT_BLANK), GREATER_THAN(dryMass)]","[IF(lmaSampleCondition!= 'invalid fresh mass'), REQUIRE][IF(lmaSampleCondition= 'invalid fresh mass'), REQUIRE_NULL][GREATER_THAN(0)][LESS_THAN(500)]"
cfc_LMA,ovenStartDate,"The date and time a sample was placed in the drying oven",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[GREATER_THAN_OR_EQUAL_TO(collectDate)]","[DATE_FORMAT('YYYY-MM-DDTHH:MM')][GREATER_THAN_OR_EQUAL_TO(scanDate)]"
cfc_LMA,ovenEndDate,"The date and time a sample was removed from the drying oven",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[GREATER_THAN(ovenStartDate)]","[DATE_FORMAT('YYYY-MM-DDTHH:MM')][GREATER_THAN(ovenStartDate)][IF(LESS_THAN(ovenStartDate + 48hr)), WARN]"
cfc_LMA,dryMass,"Oven-dried mass of sample or subsample",real,gram,,"[IF (lmaSampleFate = 'discarded'), REQUIRE]","[LESS_THAN(freshMass)]"
cfc_LMA,weighedBy,"An identifier for the technician who weighed the sample",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
cfc_LMA,scannedLeafNumber,"Number of leaves or needles scanned",unsigned integer,number,,"[GREATER_THAN(0)][LESS_THAN(500)]","[GREATER_THAN(0)][LESS_THAN(500)]"
cfc_LMA,leafArea,"Area of all leaves or needles scanned",real,squareMillimeter,,"[IF (lmaSampleFate = 'discarded'), REQUIRE][GREATER_THAN(0)][LESS_THAN(500000)]","[GREATER_THAN(0)][LESS_THAN(500000)]"
cfc_LMA,percentGreen,"Visual estimate of percent scanned foliar material that was live and green",unsigned integer,percent,,"[GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(100)]","[GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(100)][SUGGESTED_ENTRY('100')]"
cfc_LMA,leafMassPerArea,"Dry mass per unit area of leaf or needle foliage",real,gramsPerSquareMeter,"[(dryMass / leafArea) * 1000000]",,
cfc_LMA,dryMassFraction,"Dry mass divided by fresh mass of a sample",real,NA,"[dryMass / freshMass]",,
cfc_LMA,measuredBy,"An identifier for the technician who measured or collected the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
cfc_LMA,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[IF (lmaSampleCondition = 'other'), REQUIRE][ASCII]","[IF (lmaSampleCondition = 'other'), REQUIRE][ASCII]"
cfc_LMA,fulcrumVersion,"Version of the Fulcrum application used during data entry",string,NA,,"[ASCII]",
cfc_LMA,platformInfo,"Operating System and browser information (where applicable) of computer used during data entry",string,NA,,"[ASCII]",
cfc_LMA,dataQF,"Data quality flag",string,NA,,"[ASCII]",
cfc_chemistrySubsampling,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
cfc_chemistrySubsampling,sampleID,"Identifier for sample",string,NA,,"[IF(IS_BLANK(sampleCode)), REQUIRE][EXISTS]","[REQUIRE]"
cfc_chemistrySubsampling,sampleFate,"Fate of a sample",string,NA,,"[ASCII]","[HIDDEN][DEFAULT_TO('processed')]"
cfc_chemistrySubsampling,sampleCode,"Barcode of a sample",string,NA,,"[ASCII]",
cfc_chemistrySubsampling,plotID,"Plot identifier (NEON site code_XXX)",string,NA,"[DERIVE_FROM_SAMPLE_TREE('cfc_fieldData_in.sampleID')]","[NAMED_LOCATION_TYPE('OS Plot - cfc')]",
cfc_chemistrySubsampling,setDate,"Date that trap was set",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('cfc_fieldData_in.sampleID')]",,
cfc_chemistrySubsampling,collectDate,"Date of the collection event",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('cfc_fieldData_in.sampleID')]",,
cfc_chemistrySubsampling,ovenStartDate,"The date and time a sample was placed in the drying oven",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[GREATER_THAN_OR_EQUAL_TO(collectDate)]","[DATE_FORMAT('YYYY-MM-DDTHH:MM')][GREATER_THAN_OR_EQUAL_TO(collectDate)]"
cfc_chemistrySubsampling,ovenEndDate,"The date and time a sample was removed from the drying oven",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[GREATER_THAN(ovenStartDate)]","[DATE_FORMAT('YYYY-MM-DDTHH:MM')][GREATER_THAN(ovenStartDate)][IF(LESS_THAN(ovenStartDate + 48hr)), WARN]"
cfc_chemistrySubsampling,sampleCondition,"Condition of a sample",string,NA,,"[LOV]","[DEFAULT_TO('OK')][LOV]"
cfc_chemistrySubsampling,toxicodendronPossible,"Indicator for whether a sample may contain Toxicodendron spp",string,NA,,"[LOV]","[LOV]"
cfc_chemistrySubsampling,cnSampleID,"Identifier for a carbon-nitrogen sample",string,NA,,"[IF(IS_BLANK(cnSampleCode)), REQUIRE][DOES_NOT_EXIST][ASCII]","[REQUIRE][sampleID & '.cn']"
cfc_chemistrySubsampling,cnSampleFate,"Fate of a carbon-nitrogen sample",string,NA,,"[LOV]","[DEFAULT_TO('active')][LOV]"
cfc_chemistrySubsampling,cnSampleCode,"Barcode of a carbon-nitrogen sample",string,NA,,"[ASCII]",
cfc_chemistrySubsampling,ligninSampleID,"Identifier for a lignin sample",string,NA,,"[IF(IS_BLANK(ligninSampleBarcode)), REQUIRE][DOES_NOT_EXIST][ASCII]","[REQUIRE][sampleID & '.lig']"
cfc_chemistrySubsampling,ligninSampleFate,"Fate of a lignin sample",string,NA,,"[LOV]","[DEFAULT_TO('active')][LOV]"
cfc_chemistrySubsampling,ligninSampleBarcode,"Barcode for a lignin sample",string,NA,,"[ASCII]",
cfc_chemistrySubsampling,bgcArchive,"Indicator for whether a biogeochemistry archive sample was created",string,NA,,"[LOV]","[LOV]"
cfc_chemistrySubsampling,archiveSampleID,"Identifier for an archive sample",string,NA,,"[IF(bgcArchive = 'Y' & IS_BLANK(archiveSampleCode)), REQUIRE][DOES_NOT_EXIST][ASCII]","[IF (bgcArchive = 'Y'), REQUIRE][sampleID & '.ar']"
cfc_chemistrySubsampling,archiveSampleFate,"Fate of archived sample",string,NA,,"[LOV]","[DEFAULT_TO('active')][LOV]"
cfc_chemistrySubsampling,archiveSampleCode,"Barcode of archive sample",string,NA,,"[ASCII]",
cfc_chemistrySubsampling,archiveMass,"Mass of an archive sample",real,gram,,"[GREATER_THAN(0)][LESS_THAN_OR_EQUAL_TO(100)]","[IF (bgcArchive = 'Y'), REQUIRE][GREATER_THAN(0)][LESS_THAN_OR_EQUAL_TO(100)]"
cfc_chemistrySubsampling,processedBy,"An identifier for the technician who processed the sample(s)",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
cfc_chemistrySubsampling,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[IF (sampleCondition = 'other'), REQUIRE][ASCII]","[IF (sampleCondition = 'other'), REQUIRE][ASCII]"
cfc_chemistrySubsampling,fulcrumVersion,"Version of the Fulcrum application used during data entry",string,NA,,"[ASCII]",
cfc_chemistrySubsampling,platformInfo,"Operating System and browser information (where applicable) of computer used during data entry",string,NA,,"[ASCII]",
cfc_chemistrySubsampling,dataQF,"Data quality flag",string,NA,,"[ASCII]",
sls_metagenomicsPooling,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
sls_metagenomicsPooling,plotID,"Plot identifier (NEON site code_XXX)",string,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID')]","[NAMED_LOCATION_TYPE('OS Plot - bgc')]","[REQUIRE]"
sls_metagenomicsPooling,horizon,"Organic or mineral soil",string,NA,,"[LOV]","[REQUIRE][LOV]"
sls_metagenomicsPooling,setDate,"Date that trap was set",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID')]",,
sls_metagenomicsPooling,collectDate,"Date of the collection event",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID')]",,
sls_metagenomicsPooling,eventID,"An identifier for the set of information associated with the event, which includes information about the place and time of the event",string,NA,,"[ASCII]","[EQUALS(siteID+'.'+sampleTiming+'.'+collectDate)]"
sls_metagenomicsPooling,samplingProtocolVersion,"The NEON document number and version where detailed information regarding the sampling method used is available; format NEON.DOC.######vX",string,NA,,"[LOV]","[REQUIRE][LOV]"
sls_metagenomicsPooling,toCompositeSampleIDList,"List of composite identifiers in a pooled sample",string,NA,"[SPLIT_BY('|')]","[EXISTS]","[REQUIRE]"
sls_metagenomicsPooling,toCompositeFateList,"List of fates of composite samples in a pooled sample",string,NA,"[SPLIT_BY('|')]","[ASCII]","[HIDDEN][DEFAULT_TO('processed')]"
sls_metagenomicsPooling,toCompositeBarcodeList,"List of barcodes of composite samples in a pooled sample",string,NA,"[SPLIT_BY('|')]","[ASCII]",
sls_metagenomicsPooling,compositeSampleID,"Unique identifier for a sample that is a composite of field collected material",string,NA,,"[DOES_NOT_EXIST][MATCH_REGULAR_EXPRESSION('[A-Z]{4}_[0-9]{3}-[M|O]')][MATCH_REGULAR_EXPRESSION('20[0-9]{2}(0[1-9]|1[012])(0[1-9]|1[0-9]|2[0-9]|3[01])-(?i)comp')]","[DEFAULT_TO(plotID + horizon + collectDate)]"
sls_metagenomicsPooling,compositeSampleFate,"Fate of a sample that is a composite of field collected material",string,NA,,"[LOV]","[LOV('active', 'lost', 'discarded')][SUGGESTED_ENTRY('active')]"
sls_metagenomicsPooling,compositeSampleCode,"Barcode for a sample that is a composite of field collected material",string,NA,,"[ASCII]",
sls_metagenomicsPooling,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII]","[ASCII]"
sls_metagenomicsPooling,processedBy,"An identifier for the technician who processed the sample(s)",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
sls_metagenomicsPooling,recordedBy,"An identifier for the technician who recorded the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
sls_metagenomicsPooling,sampleCondition,"Condition of a sample",string,NA,,"[LOV]","[REQUIRE][LOV][SUGGESTED_ENTRY('OK')]"
sls_metagenomicsPooling,genomicsDataQF,"Quality flag for genomics sample",string,NA,,"[ASCII]",
sls_metagenomicsPooling,fulcrumPrimaryKey,"Primary identifier for the record in Fulcrum at the same granularity for which the record occurs in the NEON database (i.e., one fulcrumPrimaryKey should map to a single record in the NEON database)",string,NA,,"[ASCII]",
sls_bgcSubsampling,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
sls_bgcSubsampling,plotID,"Plot identifier (NEON site code_XXX)",string,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID')]","[NAMED_LOCATION_TYPE('OS Plot - bgc')]","[REQUIRE]"
sls_bgcSubsampling,horizon,"Organic or mineral soil",string,NA,,"[LOV]","[REQUIRE][LOV]"
sls_bgcSubsampling,setDate,"Date that trap was set",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID')]",,
sls_bgcSubsampling,collectDate,"Date of the collection event",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID')]",,
sls_bgcSubsampling,toxicodendronPossible,"Indicator for whether a sample may contain Toxicodendron spp",string,NA,,"[LOV]","[LOV]"
sls_bgcSubsampling,samplingProtocolVersion,"The NEON document number and version where detailed information regarding the sampling method used is available; format NEON.DOC.######vX",string,NA,,"[LOV]","[LOV]"
sls_bgcSubsampling,sampleID,"Identifier for sample",string,NA,,"[EXISTS]","[REQUIRE]"
sls_bgcSubsampling,sampleFate,"Fate of a sample",string,NA,,"[LOV]","[HIDDEN][DEFAULT_TO('active')]"
sls_bgcSubsampling,sampleCode,"Barcode of a sample",string,NA,,,
sls_bgcSubsampling,cnSampleID,"Identifier for a carbon-nitrogen sample",string,NA,,"[DOES_NOT_EXIST][MATCH_REGULAR_EXPRESSION('[A-Z]{4}_[0-9]{3}-[M|O]')][MATCH_REGULAR_EXPRESSION('-+([1-4]*[0-9]{1}-|[1-4]*[0-9]{1}.5-)+([1-4]*[0-9]{1}-|[1-4]*[0-9]{1}.5-)')][MATCH_REGULAR_EXPRESSION('20[0-9]{2}(0[1-9]|1[012])(0[1-9]|1[0-9]|2[0-9]|3[01])-(?i)cn')]","[DEFAULT_TO(sampleID + '-cn')]"
sls_bgcSubsampling,cnSampleFate,"Fate of a carbon-nitrogen sample",string,NA,,"[IF (IS_BLANK(cnSampleID)), REQUIRE_NULL][IF (IS_NOT_BLANK(cnSampleID)), REQUIRE][LOV]","[LOV( 'active', 'lost'][SUGGESTED_ENTRY('active')"
sls_bgcSubsampling,cnSampleCode,"Barcode of a carbon-nitrogen sample",string,NA,,"[ASCII]",
sls_bgcSubsampling,ovenStartDate,"The date and time a sample was placed in the drying oven",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[GREATER_THAN_OR_EQUAL_TO(collectDate-12hr)]","[REQUIRE][DATE_FORMAT(YYYY-MM-DDTHH:MM)][GREATER_THAN_OR_EQUAL_TO(collectDate)]"
sls_bgcSubsampling,ovenEndDate,"The date and time a sample was removed from the drying oven",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[GREATER_THAN_OR_EQUAL_TO(ovenStartDate)]","[DATE_FORMAT(YYYY-MM-DDTHH:MM)][GREATER_THAN_OR_EQUAL_TO(ovenStartDate)]"
sls_bgcSubsampling,bgcArchiveID,"Identifier for a biogeochemistry archive sample",string,NA,,"[DOES_NOT_EXIST][MATCH_REGULAR_EXPRESSION('[A-Z]{4}_[0-9]{3}-[M|O]')][MATCH_REGULAR_EXPRESSION('-+([1-4]*[0-9]{1}-|[1-4]*[0-9]{1}.5-)+([1-4]*[0-9]{1}-|[1-4]*[0-9]{1}.5-)')][MATCH_REGULAR_EXPRESSION('20[0-9]{2}(0[1-9]|1[012])(0[1-9]|1[0-9]|2[0-9]|3[01])-(?i)ba')]","[EQUALS(sampleID + '-ba')]"
sls_bgcSubsampling,bgcArchiveFate,"Fate of a biogeochemistry archive sample",string,NA,,"[IF (IS_NOT_BLANK(bgcArchiveID)), REQUIRE][LOV]","[LOV][SUGGESTED_ENTRY('active')]"
sls_bgcSubsampling,bgcArchiveCode,"Barcode of a biogeochemistry archive sample",string,NA,,"[ASCII]",
sls_bgcSubsampling,bgcArchiveMass,"Mass of a biogeochemistry archive sample",real,gram,,"[ASCII][GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(500)]","[GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(500)]"
sls_bgcSubsampling,sampleCondition,"Condition of a sample",string,NA,,"[LOV]","[REQUIRE][LOV][SUGGESTED_ENTRY('OK')]"
sls_bgcSubsampling,bgcRemarks,"Remarks from biogeochemistry subsample processing",string,NA,,"[ASCII]","[IF(sampleCondition='oven temperature out of range'),REQUIRE][IF(sampleCondition='storage temperature out of range'),REQUIRE][ASCII]"
sls_bgcSubsampling,processedBy,"An identifier for the technician who processed the sample(s)",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
sls_bgcSubsampling,recordedBy,"An identifier for the technician who recorded the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
sls_bgcSubsampling,bgcDataQF,"Quality flag for biogeochemistry sample",string,NA,,"[ASCII]",
ltr_chemistrySubsampling,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
ltr_chemistrySubsampling,plotID,"Plot identifier (NEON site code_XXX)",string,NA,"[DERIVE_FROM_SAMPLE_TREE('ltr_fielddata_in.fieldSampleID')]","[NAMED_LOCATION_TYPE('OS Plot - ltr')]","[REQUIRE][NAMED_LOCATION_TYPE('OS Plot - ltr')]"
ltr_chemistrySubsampling,setDate,"Date that trap was set",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('ltr_fielddata_in.fieldSampleID')]",,"[HIDDEN]"
ltr_chemistrySubsampling,collectDate,"Date of the collection event",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('ltr_fielddata_in.fieldSampleID')]",,"[HIDDEN]"
ltr_chemistrySubsampling,processingDate,"Date that sample was processed (i.e., sorted or pinned) in the domain lab",dateTime,NA,,,"[GREATER_THAN_OR_EQUAL_TO(ovenEndDate)][DATE_FORMAT(YYYY-MM-DD)]"
ltr_chemistrySubsampling,eventID,"An identifier for the set of information associated with the event, which includes information about the place and time of the event",string,NA,,"[IF(collectDate> 2020-05-01T00:00),REQUIRE][MATCH_REGULAR_EXPRESSION('LTR.20[0-9]{2}.[A-Z]{4}.[0-9]{2}')]","[CONCATENATE ('LTR.' + yearBoutBegan' + '.' + siteID + '.' + boutNumber )]"
ltr_chemistrySubsampling,massSampleIDList,"List of unique identifiers for mass samples",string,NA,"[SPLIT_BY('|')]","[EXISTS]","[FROM_TABLE(ltr_massdata_in)]"
ltr_chemistrySubsampling,massSampleFateList,"List of fates of mass samples",string,NA,"[SPLIT_BY('|')]",,"[SUGGESTED_ENTRY('processed')]"
ltr_chemistrySubsampling,massSampleBarcodeList,"List of barcodes of mass samples",string,NA,"[SPLIT_BY('|')]",,
ltr_chemistrySubsampling,massSampleMixtureID,"Identifier for a mixture of mass samples",string,NA,,"[DOES_NOT_EXIST]","[FROM_TABLE(ltr_massdata_in)]"
ltr_chemistrySubsampling,massSampleMixtureFate,"Fate of mixture of mass samples",string,NA,,"[LOV][ASCII]","[SUGGESTED_ENTRY('processed')]"
ltr_chemistrySubsampling,massSampleMixtureBarcode,"Barcode of a mixture of mass samples",string,NA,,,
ltr_chemistrySubsampling,cnSampleID,"Identifier for a carbon-nitrogen sample",string,NA,,"[DOES_NOT_EXIST][IF (IS_NOT_BLANK),STARTS_WITH(massSampleMixtureID)][IF (IS_NOT_BLANK), ENDS_WITH('.CN')]","[STARTS_WITH(massSampleID)][ENDS_WITH('.cn')]"
ltr_chemistrySubsampling,cnSampleFate,"Fate of a carbon-nitrogen sample",string,NA,,"[IF (IS_BLANK(cnSampleID)), REQUIRE_NULL][IF (IS_NOT_BLANK(cnSampleID)), REQUIRE][LOV][ASCII]","[SUGGESTED_ENTRY('active')]"
ltr_chemistrySubsampling,cnSampleCode,"Barcode of a carbon-nitrogen sample",string,NA,,,
ltr_chemistrySubsampling,ligninSampleID,"Identifier for a lignin sample",string,NA,,"[DOES_NOT_EXIST][IF (IS_NOT_BLANK),STARTS_WITH(massSampleMixtureID)][IF (IS_NOT_BLANK), ENDS_WITH('.LIG')]","[STARTS_WITH(massSampleID)][ENDS_WITH('.lig')]"
ltr_chemistrySubsampling,ligninSampleFate,"Fate of a lignin sample",string,NA,,"[IF (IS_BLANK(ligninSampleID)), REQUIRE_NULL][IF (IS_NOT_BLANK(ligninSampleID)), REQUIRE][LOV][ASCII]","[SUGGESTED_ENTRY('active')]"
ltr_chemistrySubsampling,ligninSampleBarcode,"Barcode for a lignin sample",string,NA,,,
ltr_chemistrySubsampling,archiveSampleID,"Identifier for an archive sample",string,NA,,"[DOES_NOT_EXIST][IF (IS_NOT_BLANK),STARTS_WITH(massSampleMixtureID)][IF (IS_NOT_BLANK), ENDS_WITH('.AR')]","[STARTS_WITH(massSampleID)][ENDS_WITH('.ar')]"
ltr_chemistrySubsampling,archiveSampleFate,"Fate of archived sample",string,NA,,"[IF (IS_BLANK(archiveSampleID)), REQUIRE_NULL][IF (IS_NOT_BLANK(archiveSampleID)), REQUIRE][LOV][ASCII]","[SUGGESTED_ENTRY('active')]"
ltr_chemistrySubsampling,archiveSampleBarcode,"Barcode for an archive sample",string,NA,,,
ltr_chemistrySubsampling,bgcArchiveMass,"Mass of a biogeochemistry archive sample",real,gram,,"[IF (IS_BLANK(archiveSampleID)), REQUIRE_NULL][IF (IS_NOT_BLANK(archiveSampleID) & collectDate> 2020-04-01T00:00), REQUIRE][GREATER_THAN(0)][LESS_THAN(30)]","[IF (IS_BLANK(archiveSampleID)), REQUIRE_NULL][IF (IS_NOT_BLANK(archiveSampleID)), REQUIRE]"
ltr_chemistrySubsampling,toxicodendronPossible,"Indicator for whether a sample may contain Toxicodendron spp",string,NA,,"[LOV]","[DERIVE_FROM_SAMPLE_TREE][IF_ANY(massSampleID FROM massSampleIDList.toxicodendronPossible == 'Y'), 'Y')]"
ltr_chemistrySubsampling,remarks,"Technician notes; free text comments accompanying the record",string,NA,,,
ltr_chemistrySubsampling,processedBy,"An identifier for the technician who processed the sample(s)",string,NA,,,"[FROM_PERSONNEL]"
ltr_chemistrySubsampling,dataQF,"Data quality flag",string,NA,,,
sls_soilMoisture,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
sls_soilMoisture,plotID,"Plot identifier (NEON site code_XXX)",string,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID')]","[NAMED_LOCATION_TYPE('OS Plot - bgc')]","[REQUIRE]"
sls_soilMoisture,horizon,"Organic or mineral soil",string,NA,,"[LOV]","[REQUIRE][LOV]"
sls_soilMoisture,setDate,"Date that trap was set",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID')]",,
sls_soilMoisture,collectDate,"Date of the collection event",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID')]",,
sls_soilMoisture,sampleID,"Identifier for sample",string,NA,,"[EXISTS]","[REQUIRE]"
sls_soilMoisture,sampleFate,"Fate of a sample",string,NA,,"[LOV]","[HIDDEN][DEFAULT_TO('active')]"
sls_soilMoisture,sampleCode,"Barcode of a sample",string,NA,,"[ASCII]",
sls_soilMoisture,moistureSampleID,"Identifier of moisture sample",string,NA,,"[DOES_NOT_EXIST][ASCII]","[DEFAULT_TO(sampleID + '-sm')]"
sls_soilMoisture,moistureSampleFate,"Fate of moisture sample",string,NA,,"[LOV]","[LOV( 'discarded', 'lost'][SUGGESTED_ENTRY('discarded')]"
sls_soilMoisture,moistureSampleCode,"Barcode of moisture subsample",string,NA,,"[ASCII]",
sls_soilMoisture,samplingProtocolVersion,"The NEON document number and version where detailed information regarding the sampling method used is available; format NEON.DOC.######vX",string,NA,,"[LOV]","[REQUIRE][LOV][SUGGESTED_ENTRY(previousValue)]"
sls_soilMoisture,boatMass,"Mass of the weigh boat",real,gram,,"[GREATER_THAN(0)][LESS_THAN_OR_EQUAL_TO(100)]","[WARN][GREATER_THAN(0)][LESS_THAN_OR_EQUAL_TO(100)][REQUIRE]"
sls_soilMoisture,freshMassBoatMass,"Combined mass of a fresh sample and weigh boat",real,gram,,"[IF(moistureSampleFate!='lost'),REQUIRE][GREATER_THAN(boatMass)]","[WARN][GREATER_THAN(boatMass)]"
sls_soilMoisture,ovenStartDate,"The date and time a sample was placed in the drying oven",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[GREATER_THAN_OR_EQUAL_TO(collectDate-12hr)]","[DATE_FORMAT(YYYY-MM-DDTHH:MM)][GREATER_THAN_OR_EQUAL_TO(collectDate)]"
sls_soilMoisture,ovenEndDate,"The date and time a sample was removed from the drying oven",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[GREATER_THAN_OR_EQUAL_TO(ovenStartDate)]","[DATE_FORMAT(YYYY-MM-DDTHH:MM)][GREATER_THAN_OR_EQUAL_TO(ovenStartDate)]"
sls_soilMoisture,dryMassBoatMass,"Oven-dried mass of the sample and weigh boat",real,gram,,"[IF(moistureSampleFate!='lost'),REQUIRE][GREATER_THAN_OR_EQUAL_TO(boatMass)][LESS_THAN_OR_EQUAL_TO(freshMassBoatMass)]","[GREATER_THAN_OR_EQUAL_TO(boatMass)][LESS_THAN_OR_EQUAL_TO(freshMassBoatMass)]"
sls_soilMoisture,soilMoisture,"Gravimetric water content of soil in grams of water per gram dry soil",real,gramsPerGram,"((freshMassBoatMass-boatMass)-(dryMassBoatMass-boatMass))/(dryMassBoatMass-boatMass)",,
sls_soilMoisture,dryMassFraction,"Dry mass divided by fresh mass of a sample",real,NA,"(dryMassBoatMass-boatMass)/(freshMassBoatMass-boatMass)","[ASCII]",
sls_soilMoisture,smRemarks,"Remarks from measurement of sample gravimetric soil moisture",string,NA,,"[ASCII]","[ASCII]"
sls_soilMoisture,smMeasuredBy,"An identifier for the technician who measured or collected the soil moisture data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
sls_soilMoisture,recordedBy,"An identifier for the technician who recorded the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
sls_soilMoisture,smDataQF,"Quality flag for soil moisture measurement",string,NA,,"[ASCII]",
cfc_chlorophyll,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
cfc_chlorophyll,receivedDate,"Date a sample was received",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,
cfc_chlorophyll,sampleCondition,"Condition of a sample",string,NA,,"[LOV][REQUIRE_COLUMN]",
cfc_chlorophyll,receivedCondition,"Condition of the sample on the date it was received",string,NA,,"[LOV]",
cfc_chlorophyll,extractionStartDate,"The start date-time for an extraction event",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE][REQUIRE_COLUMN]",
cfc_chlorophyll,extractionLength,"The duration of an extraction event",real,hour,,"[GREATER_THAN(0)][LESS_THAN(120)][REQUIRE_COLUMN]",
cfc_chlorophyll,plotID,"Plot identifier (NEON site code_XXX)",string,NA,"[DERIVE_FROM_SAMPLE_TREE('cfc_fieldData_in.sampleID')]","[NAMED_LOCATION_TYPE('OS Plot - cfc')]",
cfc_chlorophyll,setDate,"Date that trap was set",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('cfc_fieldData_in.sampleID')]",,
cfc_chlorophyll,collectDate,"Date of the collection event",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('cfc_fieldData_in.sampleID')]",,
cfc_chlorophyll,chlorophyllSampleID,"Identifier for a chlorophyll sample",string,NA,,"[IF(IS_BLANK(chlorophyllSampleCode)), REQUIRE][EXISTS][REQUIRE_COLUMN]",
cfc_chlorophyll,chlorophyllSampleFate,"Fate of a chlorophyll sample",string,NA,"[DEFAULT_TO('discarded')]",,
cfc_chlorophyll,chlorophyllSampleCode,"Barcode of a chlorophyll sample",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_chlorophyll,internalLabID,"Internal identifier used by the external facility",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_chlorophyll,runID,"A linking value provided by the external lab that associates the sample data to the run metadata, including QA values",string,NA,,"[REQUIRE][ASCII][REQUIRE_COLUMN]",
cfc_chlorophyll,freshMass,"Total fresh mass of a sample",real,gram,,"[IF(sampleCondition = 'OK'),REQUIRE][GREATER_THAN(0)][LESS_THAN(10)][REQUIRE_COLUMN]",
cfc_chlorophyll,solventVolume,"Volume of solvent used in the extraction",real,milliliter,,"[IF(sampleCondition = 'OK'),REQUIRE][GREATER_THAN(0)][LESS_THAN(200)][REQUIRE_COLUMN]",
cfc_chlorophyll,dilutionFactor,"The factor by which the sample was diluted prior to analysis",real,NA,,"[IF(sampleCondition = 'OK'),REQUIRE][GREATER_THAN_OR_EQUAL_TO(1)][REQUIRE_COLUMN]",
cfc_chlorophyll,analyticalRepNumber,"Number of the analytical replicate",unsigned integer,number,,"[IF(sampleCondition= 'OK'),REQUIRE][GREATER_THAN_OR_EQUAL_TO(1)][LESS_THAN(10)][REQUIRE_COLUMN]",
cfc_chlorophyll,chlCarotWavelength1,"The first wavelength used to measure chlorophyll and carotenoid content",real,nanometer,,"[REQUIRE_COLUMN]",
cfc_chlorophyll,chlCarotWavelength2,"The second wavelength used to measure chlorophyll and carotenoid content",real,nanometer,,"[REQUIRE_COLUMN]",
cfc_chlorophyll,chlCarotWavelength3,"The third wavelength used to measure chlorophyll and carotenoid content",real,nanometer,,"[REQUIRE_COLUMN]",
cfc_chlorophyll,chlCarotWavelength4,"The fourth wavelength used to measure chlorophyll and carotenoid content",real,nanometer,,"[REQUIRE_COLUMN]",
cfc_chlorophyll,chlCarotWavelength1Abs,"Absorbance values for the first wavelength used to measure chlorophyll and carotenoid content",real,NA,,"[IF(chlCarotWavelength1>700), GREATER_THAN_OR_EQUAL_TO(0.4-)][IF(chlCarotWavelength1>700), LESS_THAN_OR_EQUAL_TO(0.1)][IF(chlCarotWavelength1<700), GREATER_THAN(0)][IF(chlCarotWavelength1<700), LESS_THAN(2)][REQUIRE_COLUMN]",
cfc_chlorophyll,chlCarotWavelength2Abs,"Absorbance values for the second wavelength used to measure chlorophyll and carotenoid content",real,NA,,"[IF(chlCarotWavelength2>700), GREATER_THAN_OR_EQUAL_TO(0.4-)][IF(chlCarotWavelength2>700), LESS_THAN_OR_EQUAL_TO(0.1)][IF(chlCarotWavelength2<700), GREATER_THAN(0)][IF(chlCarotWavelength2<700), LESS_THAN(2)][REQUIRE_COLUMN]",
cfc_chlorophyll,chlCarotWavelength3Abs,"Absorbance values for the third wavelength used to measure chlorophyll and carotenoid content",real,NA,,"[IF(chlCarotWavelength3>700), GREATER_THAN_OR_EQUAL_TO(0.4-)][IF(chlCarotWavelength3>700), LESS_THAN_OR_EQUAL_TO(0.1)][IF(chlCarotWavelength3<700), GREATER_THAN(0)][IF(chlCarotWavelength3<700), LESS_THAN(2)][REQUIRE_COLUMN]",
cfc_chlorophyll,chlCarotWavelength4Abs,"Absorbance values for the fourth wavelength used to measure chlorophyll and carotenoid content",real,NA,,"[IF(chlCarotWavelength4>700), GREATER_THAN_OR_EQUAL_TO(0.4-)][IF(chlCarotWavelength4>700), LESS_THAN_OR_EQUAL_TO(0.1)][IF(chlCarotWavelength4<700), GREATER_THAN(0)][IF(chlCarotWavelength4<700), LESS_THAN(2)][REQUIRE_COLUMN]",
cfc_chlorophyll,extractChlAConc,"Calculated chlorophyll A concentration of the extract solution, dilution-corrected as needed",real,microgramsPerMilliliter,,"[REQUIRE_COLUMN]",
cfc_chlorophyll,extractChlBConc,"Calculated chlorophyll B concentration of the extract solution, dilution-corrected as needed",real,microgramsPerMilliliter,,"[REQUIRE_COLUMN]",
cfc_chlorophyll,extractCarotConc,"Calculated total carotenoid concentration of the extract solution, dilution-corrected as needed",real,microgramsPerMilliliter,,"[REQUIRE_COLUMN]",
cfc_chlorophyll,relativeAccuracyScale,"Indicator for the mean relative accuracy of standards analyzed as unknowns with a run of samples",string,NA,,"[LOV][REQUIRE_COLUMN]",
cfc_chlorophyll,handlingQF,"Quality flag for sample handling",string,NA,,"[LOV][REQUIRE_COLUMN]",
cfc_chlorophyll,measurementQF,"Quality flag for sample measurement",string,NA,,"[LOV][REQUIRE_COLUMN]",
cfc_chlorophyll,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII][IF(sampleCondition= 'other'),REQUIRE][REQUIRE_COLUMN]",
cfc_chlorophyll,laboratoryName,"Name of the laboratory or facility that is processing the sample",string,NA,"[DEFAULT_TO_LAB_LOGGED_IN]","[NAMED_LOCATION_TYPE('External Lab')]",
cfc_chlorophyll,testMethod,"Method used to conduct test",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_chlorophyll,analyzedBy,"Name of lab personnel analyzing sample",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_chlorophyll,reviewedBy,"Name of lab personnel who reviewed the data prior to submission",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_chlorophyll,dataQF,"Data quality flag",string,NA,,"[ASCII]",
ltr_lignin,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
ltr_lignin,receivedDate,"Date a sample was received",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,
ltr_lignin,analysisDate,"Date that the sample was analyzed",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE][REQUIRE_COLUMN]",
ltr_lignin,plotID,"Plot identifier (NEON site code_XXX)",string,NA,"[DERIVE_FROM_SAMPLE_TREE('cfc_fieldData_in.sampleID' OR 'ltr_fielddata_in.fieldSampleID')]","[NAMED_LOCATION_TYPE('OS Plot - cfc' OR 'OS Plot - ltr')]",
ltr_lignin,setDate,"Date that trap was set",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('cfc_fieldData_in.sampleID' OR 'ltr_fielddata_in.fieldSampleID')]",,
ltr_lignin,collectDate,"Date of the collection event",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('cfc_fieldData_in.sampleID' OR 'ltr_fielddata_in.fieldSampleID')]",,
ltr_lignin,ligninSampleID,"Identifier for a lignin sample",string,NA,,"[EXISTS][IF(IS_BLANK(ligninSampleBarcode)), REQUIRE][REQUIRE_COLUMN]",
ltr_lignin,ligninSampleFate,"Fate of a lignin sample",string,NA,,"[DEFAULT_TO('discarded')]",
ltr_lignin,ligninSampleBarcode,"Barcode for a lignin sample",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ltr_lignin,internalLabID,"Internal identifier used by the external facility",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ltr_lignin,runID,"A linking value provided by the external lab that associates the sample data to the run metadata, including QA values",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ltr_lignin,analyticalRepNumber,"Number of the analytical replicate",unsigned integer,number,,"[LESS_THAN(10)][REQUIRE_COLUMN]",
ltr_lignin,dryMass,"Oven-dried mass of sample or subsample",real,gram,,"[GREATER_THAN(0)][LESS_THAN(10)][REQUIRE_COLUMN]",
ltr_lignin,ligninPercent,"Percent lignin on a dry mass basis",real,percent,,"[GREATER_THAN(0)][LESS_THAN(100)][REQUIRE_COLUMN]",
ltr_lignin,cellulosePercent,"Percent cellulose on a dry mass basis",real,percent,,"[GREATER_THAN(0)][LESS_THAN(100)][REQUIRE_COLUMN]",
ltr_lignin,measurementQF,"Quality flag for sample measurement",string,NA,,"[LOV][REQUIRE_COLUMN]",
ltr_lignin,accuracyQF,"Quality flag for quality assurance materials associated with the run",string,NA,,"[LOV][REQUIRE_COLUMN]",
ltr_lignin,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ltr_lignin,laboratoryName,"Name of the laboratory or facility that is processing the sample",string,NA,"[DEFAULT_TO_LAB_LOGGED_IN]","[NAMED_LOCATION_TYPE('External Lab')]",
ltr_lignin,testMethod,"Method used to conduct test",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ltr_lignin,analyzedBy,"Name of lab personnel analyzing sample",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ltr_lignin,reviewedBy,"Name of lab personnel who reviewed the data prior to submission",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ltr_lignin,dataQF,"Data quality flag",string,NA,,"[ASCII]",
ntr,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
ntr,siteID,"NEON site code",string,NA,,"[NAMED_LOCATION_TYPE('SITE')]",
ntr,extractionStartDate,"The start date-time for an extraction event",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,"[REQUIRE]"
ntr,extractionEndDate,"The end date-time for an extraction event",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,"[HIDDEN][DEFAULT_TO('extractionStartDate')]"
ntr,kclReferenceID,"Identifier for a potassium chloride (KCl) blank reference",string,NA,,"[MIGHT_EXIST][ASCII]","[REQUIRE][siteID & extractionStartDate & '-Bref' & kclBlankNumber]"
ntr,kclReferenceFate,"Fate of a potassium chloride (KCl) blank reference",string,NA,,"[ASCII]","[HIDDEN][DEFAULT_TO('processed')]"
ntr,kclReferenceCode,"Barcode of a potassium chloride (KCl) blank reference",string,NA,,"[ASCII]","[HIDDEN]"
ntr,kclBlank1ID,"Identifier for the first potassium chloride (KCl) blank reference sample",string,NA,,"[DOES_NOT_EXIST][ASCII]","[REQUIRE][kclReferenceID & '-A']"
ntr,kclBlank1Fate,"Fate of the first potassium chloride (KCl) blank blank reference sample",string,NA,,"[ASCII]","[HIDDEN][DEFAULT_TO('active')]"
ntr,kclBlank1Code,"Barcode of the first potassium chloride (KCl) blank reference sample",string,NA,,"[ASCII]","[HIDDEN]"
ntr,kclBlank2ID,"Identifier for the second potassium chloride (KCl) blank reference sample",string,NA,,"[DOES_NOT_EXIST][ASCII]","[WARN][kclReferenceID & '-B']"
ntr,kclBlank2Fate,"Fate of the second potassium chloride (KCl) blank reference sample",string,NA,,"[ASCII]","[HIDDEN][DEFAULT_TO('active')]"
ntr,kclBlank2Code,"Barcode of the second potassium chloride (KCl) blank reference sample",string,NA,,"[ASCII]","[HIDDEN]"
ntr,kclBlank3ID,"Identifier for the third potassium chloride (KCl) blank reference sample",string,NA,,"[DOES_NOT_EXIST][ASCII]","[WARN][kclReferenceID & '-C']"
ntr,kclBlank3Fate,"Fate of the third potassium chloride (KCl) blank reference sample",string,NA,,"[ASCII]","[HIDDEN][DEFAULT_TO('active')]"
ntr,kclBlank3Code,"Barcode of the third potassium chloride (KCl) blank reference sample",string,NA,,"[ASCII]","[HIDDEN]"
ntr,processedBy,"An identifier for the technician who processed the sample(s)",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
ntr,recordedBy,"An identifier for the technician who recorded the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
ntr,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII]","[ASCII]"
ntr,fulcrumVersion,"Version of the Fulcrum application used during data entry",string,NA,,"[ASCII]",
ntr,platformInfo,"Operating System and browser information (where applicable) of computer used during data entry",string,NA,,"[ASCII]",
ntr,dataQF,"Data quality flag",string,NA,,"[ASCII]",
bgc_CNiso_externalAnalysis,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
bgc_CNiso_externalAnalysis,receivedDate,"Date a sample was received",dateTime,NA,"[CONVERT_TO_UTC(laboratoryName)]","[GREATER_THAN_OR_EQUAL_TO (2013-01-01T)][LESS_THAN_OR_EQUAL_TO (NOW + 24hr)]",
bgc_CNiso_externalAnalysis,analysisDate,"Date that the sample was analyzed",dateTime,NA,"[CONVERT_TO_UTC(laboratoryName)]","[REQUIRE][GREATER_THAN_OR_EQUAL_TO (2013-01-01T)][LESS_THAN_OR_EQUAL_TO (NOW + 24hr)][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,locationID,"Identifier for location where sample was collected",string,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID' OR 'cfc_fieldData_in.sampleID' OR 'ltr_fielddata_in.fieldSampleID' OR 'bbc_percore_in.sampleID' OR 'mgp_permegapit_in.pitID')]","[NAMED_LOCATION_TYPE('OS Plot - cfc' OR 'OS Plot - bbc' OR 'OS Plot - bgc' OR 'OS Plot - ltr' OR 'MEGAPIT')]",
bgc_CNiso_externalAnalysis,setDate,"Date that trap was set",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID' OR 'cfc_fieldData_in.sampleID' OR 'ltr_fielddata_in.fieldSampleID' OR 'bbc_percore_in.sampleID' OR 'mgp_permegapit_in.pitID')]",,
bgc_CNiso_externalAnalysis,collectDate,"Date of the collection event",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID' OR 'cfc_fieldData_in.sampleID' OR 'ltr_fielddata_in.fieldSampleID' OR 'bbc_percore_in.sampleID' OR 'mgp_permegapit_in.pitID')]",,
bgc_CNiso_externalAnalysis,cnSampleID,"Identifier for a carbon-nitrogen sample",string,NA,,"[EXISTS][IF(IS_BLANK(cnSampleCode)), REQUIRE][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,cnSampleFate,"Fate of a carbon-nitrogen sample",string,NA,"[DEFAULT_TO('discarded')]","[ASCII]",
bgc_CNiso_externalAnalysis,cnSampleCode,"Barcode of a carbon-nitrogen sample",string,NA,,"[REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,sampleType,"Type of sample",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,runID,"A linking value provided by the external lab that associates the sample data to the run metadata, including QA values",string,NA,,"[ASCII][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,internalLabID,"Internal identifier used by the external facility",string,NA,,"[ASCII][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,acidTreatment,"Indicator for whether a sample has been acidified to remove carbonate prior to analysis",string,NA,,"[IF (sampleType = 'soil'), REQUIRE][LOV][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,co2Trapped,"Indicator for whether carbon dioxide was trapped prior to analysis; used for measuring nitrogen in high C:N samples",string,NA,,"[IF (sampleType = 'vegetation'), REQUIRE][LOV][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,nitrogenPercent,"Percent nitrogen in a sample on a dry weight basis",real,percent,,"[GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN(5)][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,carbonPercent,"Percent carbon in a sample on a dry weight basis",real,percent,,"[GREATER_THAN(0)][LESS_THAN(75)][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,CNratio,"Ratio of carbon to nitrogen concentration in a sample on a dry weight basis",real,NA,,"[IF(IS_BLANK(carbonPercent)), REQUIRE_NULL][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,d15N,"Measure of the ratio of 15N:14N in a sample, relative to atmospheric N2",real,permill,,"[GREATER_THAN(13-)][LESS_THAN(16)][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,d13C,"Measure of the ratio of 13C:12C in a sample, relative to Vienna Pee Dee Belemnite",real,permill,,"[GREATER_THAN(40-)][LESS_THAN(8-)][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,cnPercentQF,"Quality flag for concentration values outside the calibration range",string,NA,,"[LOV][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,cnIsotopeQF,"Quality flag for stable isotope values outside the calibration range",string,NA,,"[LOV][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,percentAccuracyQF,"Quality flag for accuracy of percent concentration values of QA materials associated with the run",string,NA,,"[LOV][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,isotopeAccuracyQF,"Quality flag for accuracy of stable isotope values of QA materials associated with the run",string,NA,,"[LOV][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,analyticalRepNumber,"Number of the analytical replicate",unsigned integer,number,,"[LESS_THAN(10)][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,laboratoryName,"Name of the laboratory or facility that is processing the sample",string,NA,"[DEFAULT_TO_LAB_LOGGED_IN]","[NAMED_LOCATION_TYPE('External Lab')]",
bgc_CNiso_externalAnalysis,testMethod,"Method used to conduct test",string,NA,,"[ASCII][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,instrument,"Type of instrument used for the analysis",string,NA,,"[ASCII][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,analyzedBy,"Name of lab personnel analyzing sample",string,NA,,"[ASCII][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,reviewedBy,"Name of lab personnel who reviewed the data prior to submission",string,NA,,"[ASCII][REQUIRE_COLUMN]",
bgc_CNiso_externalAnalysis,dataQF,"Data quality flag",string,NA,,"[ASCII]",
cfc_elements,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
cfc_elements,receivedDate,"Date a sample was received",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,
cfc_elements,analysisDate,"Date that the sample was analyzed",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE][REQUIRE_COLUMN]",
cfc_elements,plotID,"Plot identifier (NEON site code_XXX)",string,NA,"[DERIVE_FROM_SAMPLE_TREE('cfc_fieldData_in.sampleID')]","[NAMED_LOCATION_TYPE('OS Plot - cfc')]",
cfc_elements,setDate,"Date that trap was set",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('cfc_fieldData_in.sampleID')]",,
cfc_elements,collectDate,"Date of the collection event",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('cfc_fieldData_in.sampleID')]",,
cfc_elements,ligninSampleID,"Identifier for a lignin sample",string,NA,,"[IF(IS_BLANK(ligninSampleBarcode)), REQUIRE][EXISTS][REQUIRE_COLUMN]",
cfc_elements,ligninSampleFate,"Fate of a lignin sample",string,NA,"[DEFAULT_TO('discarded')]",,
cfc_elements,ligninSampleBarcode,"Barcode for a lignin sample",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_elements,internalLabID,"Internal identifier used by the external facility",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_elements,runID,"A linking value provided by the external lab that associates the sample data to the run metadata, including QA values",string,NA,,"[REQUIRE][ASCII][REQUIRE_COLUMN]",
cfc_elements,analyticalRepNumber,"Number of the analytical replicate",unsigned integer,number,,"[REQUIRE][LESS_THAN(10)][REQUIRE_COLUMN]",
cfc_elements,dryMass,"Oven-dried mass of sample or subsample",real,gram,,"[GREATER_THAN(0)][LESS_THAN(10)][REQUIRE_COLUMN]",
cfc_elements,digestVolume,"Volume of digest solution used",real,milliliter,,"[REQUIRE_COLUMN]",
cfc_elements,digestPhosphorusConc,"Concentration of phophorus in sample digest",real,milligramsPerLiter,,"[REQUIRE_COLUMN]",
cfc_elements,digestPotassiumConc,"Concentration of potassium in sample digest",real,milligramsPerLiter,,"[REQUIRE_COLUMN]",
cfc_elements,digestCalciumConc,"Concentration of calcium in sample digest",real,milligramsPerLiter,,"[REQUIRE_COLUMN]",
cfc_elements,digestMagnesiumConc,"Concentration of magnesium in sample digest",real,milligramsPerLiter,,"[REQUIRE_COLUMN]",
cfc_elements,digestSulfurConc,"Concentration of sulfur in sample digest",real,milligramsPerLiter,,"[REQUIRE_COLUMN]",
cfc_elements,digestManganeseConc,"Concentration of manganese in sample digest",real,milligramsPerLiter,,"[REQUIRE_COLUMN]",
cfc_elements,digestIronConc,"Concentration of iron in sample digest",real,milligramsPerLiter,,"[REQUIRE_COLUMN]",
cfc_elements,digestCopperConc,"Concentration of copper in sample digest",real,milligramsPerLiter,,"[REQUIRE_COLUMN]",
cfc_elements,digestBoronConc,"Concentration of boron in sample digest",real,milligramsPerLiter,,"[REQUIRE_COLUMN]",
cfc_elements,digestZincConc,"Concentration of zinc in sample digest",real,milligramsPerLiter,,"[REQUIRE_COLUMN]",
cfc_elements,foliarPhosphorusConc,"Concentration of phophorus in plant foliage sample on a dry mass basis",real,percent,,"[GREATER_THAN(0)][LESS_THAN(10)][REQUIRE_COLUMN]",
cfc_elements,foliarPotassiumConc,"Concentration of potassium in plant foliage sample on a dry mass basis",real,percent,,"[GREATER_THAN(0)][LESS_THAN(10)][REQUIRE_COLUMN]",
cfc_elements,foliarCalciumConc,"Concentration of calcium in plant foliage sample on a dry mass basis",real,percent,,"[GREATER_THAN(0)][LESS_THAN(10)][REQUIRE_COLUMN]",
cfc_elements,foliarMagnesiumConc,"Concentration of magnesium in plant foliage sample on a dry mass basis",real,percent,,"[GREATER_THAN(0)][LESS_THAN(10)][REQUIRE_COLUMN]",
cfc_elements,foliarSulfurConc,"Concentration of sulfur in plant foliage sample on a dry mass basis",real,percent,,"[GREATER_THAN(0)][LESS_THAN(10)][REQUIRE_COLUMN]",
cfc_elements,foliarManganeseConc,"Concentration of manganese in plant foliage sample on a dry mass basis",real,milligramsPerKilogram,,"[REQUIRE_COLUMN]",
cfc_elements,foliarIronConc,"Concentration of iron in plant foliage sample on a dry mass basis",real,milligramsPerKilogram,,"[REQUIRE_COLUMN]",
cfc_elements,foliarCopperConc,"Concentration of copper in plant foliage sample on a dry mass basis",real,milligramsPerKilogram,,"[REQUIRE_COLUMN]",
cfc_elements,foliarBoronConc,"Concentration of boron in plant foliage sample on a dry mass basis",real,milligramsPerKilogram,,"[REQUIRE_COLUMN]",
cfc_elements,foliarZincConc,"Concentration of zinc in plant foliage sample on a dry mass basis",real,milligramsPerKilogram,,"[REQUIRE_COLUMN]",
cfc_elements,foliarPhosphorusQF,"Quality flag for foliar phosphorus data",string,NA,,"[IF(IS_NOT_BLANK(foliarPhosphorusConc)), REQUIRE][LOV][REQUIRE_COLUMN]",
cfc_elements,foliarPotassiumQF,"Quality flag for foliar potassium data",string,NA,,"[IF(IS_NOT_BLANK(foliarPotassiumConc)), REQUIRE][LOV][REQUIRE_COLUMN]",
cfc_elements,foliarCalciumQF,"Quality flag for foliar calcium data",string,NA,,"[IF(IS_NOT_BLANK(foliarCalciumConc)), REQUIRE][LOV][REQUIRE_COLUMN]",
cfc_elements,foliarMagnesiumQF,"Quality flag for foliar magnesium data",string,NA,,"[IF(IS_NOT_BLANK(foliarMagnesiumConc)), REQUIRE][LOV][REQUIRE_COLUMN]",
cfc_elements,foliarSulfurQF,"Quality flag for foliar sulfur data",string,NA,,"[IF(IS_NOT_BLANK(foliarSulfurConc)), REQUIRE][LOV][REQUIRE_COLUMN]",
cfc_elements,foliarManganeseQF,"Quality flag for foliar manganese data",string,NA,,"[IF(IS_NOT_BLANK(foliarManganeseConc)), REQUIRE][LOV][REQUIRE_COLUMN]",
cfc_elements,foliarIronQF,"Quality flag for foliar iron data",string,NA,,"[IF(IS_NOT_BLANK(foliarIronConc)), REQUIRE][LOV][REQUIRE_COLUMN]",
cfc_elements,foliarCopperQF,"Quality flag for foliar copper data",string,NA,,"[IF(IS_NOT_BLANK(foliarCopperConc)), REQUIRE][LOV][REQUIRE_COLUMN]",
cfc_elements,foliarBoronQF,"Quality flag for foliar boron data",string,NA,,"[IF(IS_NOT_BLANK(foliarBoronConc)), REQUIRE][LOV][REQUIRE_COLUMN]",
cfc_elements,foliarZincQF,"Quality flag for foliar zinc data",string,NA,,"[IF(IS_NOT_BLANK(foliarZincConc)), REQUIRE][LOV][REQUIRE_COLUMN]",
cfc_elements,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_elements,laboratoryName,"Name of the laboratory or facility that is processing the sample",string,NA,"[DEFAULT_TO_LAB_LOGGED_IN]","[NAMED_LOCATION_TYPE('External Lab')]",
cfc_elements,testMethod,"Method used to conduct test",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_elements,analyzedBy,"Name of lab personnel analyzing sample",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_elements,reviewedBy,"Name of lab personnel who reviewed the data prior to submission",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_elements,dataQF,"Data quality flag",string,NA,,"[ASCII]",
sls_soilpH,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
sls_soilpH,plotID,"Plot identifier (NEON site code_XXX)",string,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID')]","[NAMED_LOCATION_TYPE('OS Plot - bgc')]","[REQUIRE]"
sls_soilpH,horizon,"Organic or mineral soil",string,NA,,"[LOV]","[LOV]"
sls_soilpH,setDate,"Date that trap was set",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID')]",,
sls_soilpH,collectDate,"Date of the collection event",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID')]",,
sls_soilpH,processedDate,"Date or date and time of processing event",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,"[WARN][DATE_FORMAT(YYYY-MM-DDTHH:MM)][GREATER_THAN_OR_EQUAL_TO(collectDate)]"
sls_soilpH,sampleID,"Identifier for sample",string,NA,,"[EXISTS]","[REQUIRE]"
sls_soilpH,sampleFate,"Fate of a sample",string,NA,,"[LOV]","[HIDDEN][DEFAULT_TO('active')]"
sls_soilpH,sampleCode,"Barcode of a sample",string,NA,,,
sls_soilpH,pHSampleID,"Identifier for pH sample",string,NA,,"[DOES_NOT_EXIST][ASCII]","[DEFAULT_TO(sampleID + '-pH')]"
sls_soilpH,pHSampleFate,"Fate of pH sample",string,NA,,"[LOV]","[LOV( 'discarded', 'consumed', 'lost'][SUGGESTED_ENTRY('discarded')]"
sls_soilpH,pHSampleCode,"Barcode of pH sample",string,NA,,"[ASCII]",
sls_soilpH,samplingProtocolVersion,"The NEON document number and version where detailed information regarding the sampling method used is available; format NEON.DOC.######vX",string,NA,,"[LOV]","[REQUIRE][LOV]"
sls_soilpH,pHSoilInWaterMass,"Mass of soil used to analyze pH in water solution",real,gram,,"[GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(100)]","[WARN][GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(50)]"
sls_soilpH,pHWaterVol,"Volume of water used for pH measurement",real,milliliter,,"[GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(100)]","[WARN][GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(100)]"
sls_soilpH,soilInWaterpH,"pH value of soil measured in water solution",real,pH,,"[IF(pHSampleFate!='lost' AND IS_BLANK(soilInCaClpH)), REQUIRE][GREATER_THAN_OR_EQUAL_TO(2)][LESS_THAN_OR_EQUAL_TO(11)]","[GREATER_THAN_OR_EQUAL_TO(2)][LESS_THAN_OR_EQUAL_TO(11)]"
sls_soilpH,waterpHRatio,"Ratio of water to soil for pH measurement",real,NA,"[pHWaterVol/pHSoilInWaterMass]",,
sls_soilpH,pHSoilInCaClMass,"Mass of soil used to analyze pH in calcium chloride solution",real,gram,,"[GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(100)]","[EQUALS(pHSoilInWaterMass)]"
sls_soilpH,pHCaClVol,"Volume of water used for CaCl measurement",real,milliliter,,"[GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN_OR_EQUAL_TO(200)]","[EQUALS(pHWaterVol+'vol of CaCl2 added')]"
sls_soilpH,soilInCaClpH,"pH value of soil measured in calcium chloride solution",real,pH,,"[IF(pHSampleFate!='lost'), REQUIRE][GREATER_THAN_OR_EQUAL_TO(2)][LESS_THAN_OR_EQUAL_TO(11)]","[IF(pHSampleFate!='lost'), REQUIRE][GREATER_THAN_OR_EQUAL_TO(2)][LESS_THAN_OR_EQUAL_TO(11)]"
sls_soilpH,caclpHRatio,"Ratio of calcium chloride to soil for pH measurement",real,NA,"[pHCaClVol/pHSoilInCaClMass]",,
sls_soilpH,pHRemarks,"Remarks from measurement of sample pH",string,NA,,"[ASCII]","[ASCII]"
sls_soilpH,pHMeasuredBy,"An identifier for the technician who measured or collected the pH data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
sls_soilpH,recordedBy,"An identifier for the technician who recorded the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
sls_soilpH,pHDataQF,"Quality flag for pH measurement",string,NA,,"[ASCII]",
ntr,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
ntr,plotID,"Plot identifier (NEON site code_XXX)",string,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID')]","[NAMED_LOCATION_TYPE('OS Plot - bgc')]","[NAMED_LOCATION_TYPE('OS Plot - bgc')]"
ntr,setDate,"Date that trap was set",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID')]",,
ntr,collectDate,"Date of the collection event",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID')]",,
ntr,sampleID,"Identifier for sample",string,NA,,"[EXISTS]","[REQUIRE]"
ntr,sampleFate,"Fate of a sample",string,NA,,"[ASCII]","[HIDDEN][DEFAULT_TO('active')]"
ntr,sampleCode,"Barcode of a sample",string,NA,,"[ASCII]","[HIDDEN]"
ntr,samplingProtocolVersion,"The NEON document number and version where detailed information regarding the sampling method used is available; format NEON.DOC.######vX",string,NA,,"[LOV]","[LOV]"
ntr,kclSampleID,"Identifier for a potassium chloride (KCl) extract sample",string,NA,,"[REQUIRE][DOES_NOT_EXIST][ASCII]","[REQUIRE][sampleID & '-kcl']"
ntr,kclSampleFate,"Fate of a potassium chloride (KCl) extract sample",string,NA,,"[LOV]","[LOV][SUGGESTED_ENTRY('active')]"
ntr,kclSampleCode,"Barcode of a potassium chloride (KCl) extract sample",string,NA,,"[ASCII]","[HIDDEN]"
ntr,incubationPairID,"Identifier for a linked pair of soil samples used to measure net nitrogen transformation rates",string,NA,,"[ASCII]","[HIDDEN]"
ntr,nTransBoutType,"Category of bout in relation to nitrogen transformation sample collection",string,NA,,"[LOV]","[HIDDEN]"
ntr,incubationLength,"Length of soil incubation",real,day,"[collectDate - setDate][DAYS]",,
ntr,kclBatchNumber,"Potassium chloride (KCl) batch number used to extract a set of samples",unsigned integer,number,,,"[REQUIRE]"
ntr,kclReferenceID,"Identifier for a potassium chloride (KCl) blank reference",string,NA,,"[ASCII][REFERENCE_SAMPLE_EXISTS('tag', 'ntr_internalLabBlanks_in.kclReferenceID')]","[REQUIRE][siteID & extractionStartDate & '-Bref' & kclBatchNumber]"
ntr,soilFreshMass,"Total fresh mass of soil",real,gram,,"[GREATER_THAN(0)][LESS_THAN(50)]","[REQUIRE][GREATER_THAN(0)][LESS_THAN(50)]"
ntr,kclVolume,"Volume potassium chloride (KCl) used to extract soil sample",real,milliliter,,"[GREATER_THAN(10)][LESS_THAN(300)]","[REQUIRE][GREATER_THAN(10)][LESS_THAN(300)]"
ntr,extractionStartDate,"The start date-time for an extraction event",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,"[REQUIRE]"
ntr,extractionEndDate,"The end date-time for an extraction event",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[GREATER_THAN(extractionStartDate)]","[IF (extractionEndDate < extractionStartDate), WARN][IF (extractionEndDate > extractionStartDate + 30 hours), WARN]"
ntr,sampleCondition,"Condition of a sample",string,NA,,"[LOV]","[LOV][SUGGESTED_ENTRY('OK')]"
ntr,remarks,"Technician notes; free text comments accompanying the record",string,NA,,"[ASCII]","[IF (sampleCondition = 'other'), REQUIRE][ASCII]"
ntr,processedBy,"An identifier for the technician who processed the sample(s)",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
ntr,recordedBy,"An identifier for the technician who recorded the data",string,NA,,"[ASCII]","[FROM_PERSONNEL][SUGGESTED_ENTRY(previousValue)]"
ntr,fulcrumVersion,"Version of the Fulcrum application used during data entry",string,NA,,"[ASCII]",
ntr,platformInfo,"Operating System and browser information (where applicable) of computer used during data entry",string,NA,,"[ASCII]",
ntr,dataQF,"Data quality flag",string,NA,,"[ASCII]",
ntr,fulcrumPrimaryKey,"Primary identifier for the record in Fulcrum at the same granularity for which the record occurs in the NEON database (i.e., one fulcrumPrimaryKey should map to a single record in the NEON database)",string,NA,,"[ASCII]",
ntr_externalLab,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
ntr_externalLab,plotID,"Plot identifier (NEON site code_XXX)",string,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID' OR 'ntr_internalLabBlanks_in.kclReferenceID')]","[NAMED_LOCATION_TYPE('OS Plot - bgc' OR 'SITE')]",
ntr_externalLab,setDate,"Date that trap was set",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID' OR 'ntr_internalLabBlanks_in.kclReferenceID')]",,
ntr_externalLab,collectDate,"Date of the collection event",dateTime,NA,"[DERIVE_FROM_SAMPLE_TREE('sls_soilCoreCollection_in.sampleID' OR 'ntr_internalLabBlanks_in.kclReferenceID')]",,
ntr_externalLab,kclSampleID,"Identifier for a potassium chloride (KCl) extract sample",string,NA,,"[IF(IS_BLANK(kclSampleCode)),REQUIRE][EXISTS][ASCII][REQUIRE_COLUMN]",
ntr_externalLab,kclSampleFate,"Fate of a potassium chloride (KCl) extract sample",string,NA,"[DEFAULT_TO('discarded')]","[ASCII]",
ntr_externalLab,kclSampleCode,"Barcode of a potassium chloride (KCl) extract sample",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ntr_externalLab,receivedDate,"Date a sample was received",dateTime,NA,"[CONVERT_TO_UTC(laboratoryName)]",,
ntr_externalLab,receivedCondition,"Condition of the sample on the date it was received",string,NA,,"[LOV]",
ntr_externalLab,sampleCondition,"Condition of a sample",string,NA,,"[LOV][REQUIRE_COLUMN]",
ntr_externalLab,internalLabID,"Internal identifier used by the external facility",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ntr_externalLab,ammoniumNAnalysisDate,"Date an ammonium sample was analyzed",dateTime,NA,"[CONVERT_TO_UTC(laboratoryName)]","[IF(IS_NOT_BLANK(kclAmmoniumNConc)), REQUIRE][REQUIRE_COLUMN]",
ntr_externalLab,ammoniumNRunID,"A linking value that associates the ammonium sample data to the run metadata, including QA values",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ntr_externalLab,ammoniumNInstrument,"Type of instrument used for ammonium analysis",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ntr_externalLab,kclAmmoniumNConc,"Concentration of ammonium N in a potassium chloride extract",real,milligramsPerLiter,,"[GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN(500)][REQUIRE_COLUMN]",
ntr_externalLab,ammoniumNRepNum,"Analytical replicate number for ammonium sample",unsigned integer,number,,"[LESS_THAN(11)][REQUIRE_COLUMN]",
ntr_externalLab,ammoniumNQF,"Quality flag for ammonium N values",string,NA,,"[LOV][REQUIRE_COLUMN]",
ntr_externalLab,ammoniumNRemarks,"Free text comments accompanying the ammonium record",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ntr_externalLab,ammoniumNMethod,"Method used to test sample for ammonium N concentration",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ntr_externalLab,ammoniumNAnalyzedBy,"Name of lab personnel analyzing sample for ammonium N",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ntr_externalLab,ammoniumNReviewedBy,"Name of lab personnel who reviewed ammonium N data prior to submission",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ntr_externalLab,nitrateNitriteNAnalysisDate,"Date a nitrate + nitrite N sample was analyzed",dateTime,NA,"[CONVERT_TO_UTC(laboratoryName)]","[IF(IS_NOT_BLANK(kclNitrateNitriteNConc)), REQUIRE][REQUIRE_COLUMN]",
ntr_externalLab,nitrateNitriteNRunID,"a linking value provided by the external lab that associates the nitrate plus nitrite to the run metadata",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ntr_externalLab,nitrateNitriteNInstrument,"Type of instrument used for nitrate + nitrite N analysis",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ntr_externalLab,kclNitrateNitriteNConc,"Concentration of nitrate + nitrite N in a potassium chloride extract",real,milligramsPerLiter,,"[GREATER_THAN_OR_EQUAL_TO(0)][LESS_THAN(500)][REQUIRE_COLUMN]",
ntr_externalLab,nitrateNitriteNRepNum,"Analytical replicate number for nitrate + nitrite N sample",unsigned integer,number,,"[LESS_THAN(11)][REQUIRE_COLUMN]",
ntr_externalLab,nitrateNitriteNQF,"Quality flag for nitrate + nitrite N values",string,NA,,"[LOV][REQUIRE_COLUMN]",
ntr_externalLab,nitrateNitriteNRemarks,"Free text comments accompanying the nitrate + nitrite N record",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ntr_externalLab,nitrateNitriteNMethod,"Method used to test sample for nitrate + nitrite N concentration",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ntr_externalLab,nitrateNitriteNAnalyzedBy,"Name of lab personnel analyzing sample for nitrate + nitrite N",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ntr_externalLab,nitrateNitriteNReviewedBy,"Name of lab personnel who reviewed nitrite + nitrate N data prior to submission",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ntr_externalLab,laboratoryName,"Name of the laboratory or facility that is processing the sample",string,NA,"[DEFAULT_TO_LAB_LOGGED_IN]","[NAMED_LOCATION_TYPE('External Lab')]",
ntr_externalLab,dataQF,"Data quality flag",string,NA,,"[ASCII]",
ltr_ligninSummary,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
ltr_ligninSummary,startDate,"The start date-time or interval during which an event occurred",dateTime,NA,"[UPLOAD_DATE]",,
ltr_ligninSummary,endDate,"The end date-time or interval during which an event occurred",dateTime,NA,"[UPLOAD_DATE]",,
ltr_ligninSummary,analyte,"Analyte or parameter measured",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
ltr_ligninSummary,analyteUnits,"Associated units of measure for analyte",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
ltr_ligninSummary,sampleType,"Type of sample",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ltr_ligninSummary,qaReferenceID,"Identifier for quality assurance reference material or standard",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ltr_ligninSummary,analyteKnownValue,"The known value of a given analyte for a quality assurance reference material or standard, with units tied to the analyte",real,NA,,"[REQUIRE_COLUMN]",
ltr_ligninSummary,analyteObservedValue,"The measured value of a given analyte for a standard reference material, with units tied to the analyte",real,NA,,"[REQUIRE][REQUIRE_COLUMN]",
ltr_ligninSummary,analyteStandardDeviation,"Long-term average standard deviation values of the analyte, based on analysis of quality assurance reference materials or standards treated as unknowns",real,NA,,"[REQUIRE][REQUIRE_COLUMN]",
ltr_ligninSummary,analytePercentRecovery,"Percent recovery of the analyte, based on analysis of quality assurance reference materials or standards treated as unknowns",real,percent,,"[REQUIRE][REQUIRE_COLUMN]",
ltr_ligninSummary,analyteMetricsCount,"Count of how many measurements were used to determine analyte metrics",unsigned integer,number,,"[ASCII][REQUIRE_COLUMN]",
ltr_ligninSummary,qaReportingStartDate,"Start date for the quality assurance (QA) reporting period",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE][LESS_THAN_OR_EQUAL_TO (NOW + 24hr)][REQUIRE_COLUMN]",
ltr_ligninSummary,qaReportingEndDate,"End date for the quality assurance (QA) reporting period",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE][GREATER_THAN_OR_EQUAL_TO (qaReportingStartDate)][LESS_THAN_OR_EQUAL_TO (NOW + 24hr)][REQUIRE_COLUMN]",
ltr_ligninSummary,laboratoryName,"Name of the laboratory or facility that is processing the sample",string,NA,"[DEFAULT_TO_LAB_LOGGED_IN]","[NAMED_LOCATION_TYPE('External Lab')]",
ltr_ligninSummary,labSpecificStartDate,"Date a specific analyte, instrument, and associated method detection limit combination started",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,
ltr_ligninSummary,labSpecificEndDate,"Date a specific analyte, instrument, and associated method detection limit combination ended",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,
ltr_ligninSummary,instrument,"Type of instrument used for the analysis",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ltr_ligninSummary,testMethod,"Method used to conduct test",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ltr_ligninSummary,method,"Published method used for analysis",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ltr_ligninSummary,dataQF,"Data quality flag",string,NA,,"[ASCII]",
ntr_externalSummary,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
ntr_externalSummary,startDate,"The start date-time or interval during which an event occurred",dateTime,NA,"[UPLOAD_DATE]",,
ntr_externalSummary,endDate,"The end date-time or interval during which an event occurred",dateTime,NA,"[UPLOAD_DATE]",,
ntr_externalSummary,analyte,"Analyte or parameter measured",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
ntr_externalSummary,analyteUnits,"Associated units of measure for analyte",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
ntr_externalSummary,sampleType,"Type of sample",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
ntr_externalSummary,qaReferenceID,"Identifier for quality assurance reference material or standard",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ntr_externalSummary,lotID,"Lot or batch number for quality assurance material",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ntr_externalSummary,analyteKnownValue,"The known value of a given analyte for a quality assurance reference material or standard, with units tied to the analyte",real,NA,,"[REQUIRE][REQUIRE_COLUMN]",
ntr_externalSummary,analyteObservedValue,"The measured value of a given analyte for a standard reference material, with units tied to the analyte",real,NA,,"[REQUIRE_COLUMN]",
ntr_externalSummary,analytePercentRecovery,"Percent recovery of the analyte, based on analysis of quality assurance reference materials or standards treated as unknowns",real,percent,,"[REQUIRE][REQUIRE_COLUMN]",
ntr_externalSummary,analyteStandardDeviation,"Long-term average standard deviation values of the analyte, based on analysis of quality assurance reference materials or standards treated as unknowns",real,NA,,"[REQUIRE][REQUIRE_COLUMN]",
ntr_externalSummary,analyteAccuracy,"Long-term average accuracy, e.g. the absolute difference between observed and known values of the analyte, based on analysis of quality assurance reference materials or standards treated as unknowns",real,NA,,,
ntr_externalSummary,methodDetectionLimit,"Detection limit for method used",real,NA,,"[REQUIRE][REQUIRE_COLUMN]",
ntr_externalSummary,analyteMetricsCount,"Count of how many measurements were used to determine analyte metrics",unsigned integer,number,,"[ASCII][REQUIRE_COLUMN]",
ntr_externalSummary,qaReportingStartDate,"Start date for the quality assurance (QA) reporting period",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE][LESS_THAN_OR_EQUAL_TO (NOW + 24hr)][REQUIRE_COLUMN]",
ntr_externalSummary,qaReportingEndDate,"End date for the quality assurance (QA) reporting period",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE][GREATER_THAN_OR_EQUAL_TO (qaReportingStartDate)][LESS_THAN_OR_EQUAL_TO (NOW + 24hr)][REQUIRE_COLUMN]",
ntr_externalSummary,laboratoryName,"Name of the laboratory or facility that is processing the sample",string,NA,"[DEFAULT_TO_LAB_LOGGED_IN]","[NAMED_LOCATION_TYPE('External Lab')]",
ntr_externalSummary,labSpecificStartDate,"Date a specific analyte, instrument, and associated method detection limit combination started",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,
ntr_externalSummary,labSpecificEndDate,"Date a specific analyte, instrument, and associated method detection limit combination ended",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,
ntr_externalSummary,instrument,"Type of instrument used for the analysis",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ntr_externalSummary,method,"Published method used for analysis",string,NA,,"[ASCII][REQUIRE_COLUMN]",
ntr_externalSummary,dataQF,"Data quality flag",string,NA,,"[ASCII]",
bgc_CNiso_externalSummary,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
bgc_CNiso_externalSummary,startDate,"The start date-time or interval during which an event occurred",dateTime,NA,"[UPLOAD_DATE]",,
bgc_CNiso_externalSummary,endDate,"The end date-time or interval during which an event occurred",dateTime,NA,"[UPLOAD_DATE]",,
bgc_CNiso_externalSummary,analyte,"Analyte or parameter measured",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
bgc_CNiso_externalSummary,analyteUnits,"Associated units of measure for analyte",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
bgc_CNiso_externalSummary,sampleType,"Type of sample",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
bgc_CNiso_externalSummary,qaReferenceID,"Identifier for quality assurance reference material or standard",string,NA,,"[REQUIRE][ASCII][REQUIRE_COLUMN]",
bgc_CNiso_externalSummary,analyteKnownValue,"The known value of a given analyte for a quality assurance reference material or standard, with units tied to the analyte",real,NA,,"[REQUIRE][REQUIRE_COLUMN]",
bgc_CNiso_externalSummary,analyteObservedValue,"The measured value of a given analyte for a standard reference material, with units tied to the analyte",real,NA,,"[REQUIRE_COLUMN]",
bgc_CNiso_externalSummary,analyteAbsoluteError,"Long-term average absolute error, e.g. the difference between observed and known values of the analyte, based on analysis of quality assurance reference materials or standards treated as unknowns",real,NA,,"[REQUIRE][REQUIRE_COLUMN]",
bgc_CNiso_externalSummary,analyteAccuracy,"Long-term average accuracy, e.g. the absolute difference between observed and known values of the analyte, based on analysis of quality assurance reference materials or standards treated as unknowns",real,NA,,,
bgc_CNiso_externalSummary,analyteStandardDeviation,"Long-term average standard deviation values of the analyte, based on analysis of quality assurance reference materials or standards treated as unknowns",real,NA,,"[REQUIRE][REQUIRE_COLUMN]",
bgc_CNiso_externalSummary,analyteMetricsCount,"Count of how many measurements were used to determine analyte metrics",unsigned integer,number,,"[ASCII][REQUIRE_COLUMN]",
bgc_CNiso_externalSummary,qaReportingStartDate,"Start date for the quality assurance (QA) reporting period",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE][LESS_THAN_OR_EQUAL_TO (NOW + 24hr)][REQUIRE_COLUMN]",
bgc_CNiso_externalSummary,qaReportingEndDate,"End date for the quality assurance (QA) reporting period",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE][GREATER_THAN_OR_EQUAL_TO (qaReportingStartDate)][LESS_THAN_OR_EQUAL_TO (NOW + 24hr)][REQUIRE_COLUMN]",
bgc_CNiso_externalSummary,laboratoryName,"Name of the laboratory or facility that is processing the sample",string,NA,"[DEFAULT_TO_LAB_LOGGED_IN]","[NAMED_LOCATION_TYPE('External Lab')]",
bgc_CNiso_externalSummary,labSpecificStartDate,"Date a specific analyte, instrument, and associated method detection limit combination started",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,
bgc_CNiso_externalSummary,labSpecificEndDate,"Date a specific analyte, instrument, and associated method detection limit combination ended",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,
bgc_CNiso_externalSummary,instrument,"Type of instrument used for the analysis",string,NA,,"[ASCII][REQUIRE_COLUMN]",
bgc_CNiso_externalSummary,testMethod,"Method used to conduct test",string,NA,,"[ASCII][REQUIRE_COLUMN]",
bgc_CNiso_externalSummary,method,"Published method used for analysis",string,NA,,"[ASCII][REQUIRE_COLUMN]",
bgc_CNiso_externalSummary,dataQF,"Data quality flag",string,NA,,"[ASCII]",
cfc_chlorophyllSummary,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
cfc_chlorophyllSummary,startDate,"The start date-time or interval during which an event occurred",dateTime,NA,"[UPLOAD_DATE]",,
cfc_chlorophyllSummary,endDate,"The end date-time or interval during which an event occurred",dateTime,NA,"[UPLOAD_DATE]",,
cfc_chlorophyllSummary,analyte,"Analyte or parameter measured",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
cfc_chlorophyllSummary,analyteUnits,"Associated units of measure for analyte",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
cfc_chlorophyllSummary,sampleType,"Type of sample",string,NA,,"[LOV][REQUIRE_COLUMN]",
cfc_chlorophyllSummary,qaReferenceID,"Identifier for quality assurance reference material or standard",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_chlorophyllSummary,analyteKnownValue,"The known value of a given analyte for a quality assurance reference material or standard, with units tied to the analyte",real,NA,,"[REQUIRE_COLUMN]",
cfc_chlorophyllSummary,analyteObservedValue,"The measured value of a given analyte for a standard reference material, with units tied to the analyte",real,NA,,"[REQUIRE_COLUMN]",
cfc_chlorophyllSummary,analyteAbsoluteError,"Long-term average absolute error, e.g. the difference between observed and known values of the analyte, based on analysis of quality assurance reference materials or standards treated as unknowns",real,NA,,"[REQUIRE_COLUMN]",
cfc_chlorophyllSummary,analyteAccuracy,"Long-term average accuracy, e.g. the absolute difference between observed and known values of the analyte, based on analysis of quality assurance reference materials or standards treated as unknowns",real,NA,,,
cfc_chlorophyllSummary,analyteStandardDeviation,"Long-term average standard deviation values of the analyte, based on analysis of quality assurance reference materials or standards treated as unknowns",real,NA,,"[REQUIRE_COLUMN]",
cfc_chlorophyllSummary,analyteMetricsCount,"Count of how many measurements were used to determine analyte metrics",unsigned integer,number,,"[ASCII][REQUIRE_COLUMN]",
cfc_chlorophyllSummary,qaReportingStartDate,"Start date for the quality assurance (QA) reporting period",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE][LESS_THAN_OR_EQUAL_TO (NOW + 24hr)][REQUIRE_COLUMN]",
cfc_chlorophyllSummary,qaReportingEndDate,"End date for the quality assurance (QA) reporting period",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE][GREATER_THAN_OR_EQUAL_TO (qaReportingStartDate)][LESS_THAN_OR_EQUAL_TO (NOW + 24hr)][REQUIRE_COLUMN]",
cfc_chlorophyllSummary,laboratoryName,"Name of the laboratory or facility that is processing the sample",string,NA,"[DEFAULT_TO_LAB_LOGGED_IN]","[NAMED_LOCATION_TYPE('External Lab')]",
cfc_chlorophyllSummary,labSpecificStartDate,"Date a specific analyte, instrument, and associated method detection limit combination started",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,
cfc_chlorophyllSummary,labSpecificEndDate,"Date a specific analyte, instrument, and associated method detection limit combination ended",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,
cfc_chlorophyllSummary,instrument,"Type of instrument used for the analysis",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_chlorophyllSummary,testMethod,"Method used to conduct test",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_chlorophyllSummary,method,"Published method used for analysis",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_chlorophyllSummary,dataQF,"Data quality flag",string,NA,,"[ASCII]",
cfc_elementsSummary,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
cfc_elementsSummary,startDate,"The start date-time or interval during which an event occurred",dateTime,NA,"[UPLOAD_DATE]",,
cfc_elementsSummary,endDate,"The end date-time or interval during which an event occurred",dateTime,NA,"[UPLOAD_DATE]",,
cfc_elementsSummary,analyte,"Analyte or parameter measured",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
cfc_elementsSummary,analyteUnits,"Associated units of measure for analyte",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
cfc_elementsSummary,sampleType,"Type of sample",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_elementsSummary,qaReferenceID,"Identifier for quality assurance reference material or standard",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_elementsSummary,analyteKnownValue,"The known value of a given analyte for a quality assurance reference material or standard, with units tied to the analyte",real,NA,,"[REQUIRE_COLUMN]",
cfc_elementsSummary,analyteObservedValue,"The measured value of a given analyte for a standard reference material, with units tied to the analyte",real,NA,,"[REQUIRE_COLUMN]",
cfc_elementsSummary,analyteStandardDeviation,"Long-term average standard deviation values of the analyte, based on analysis of quality assurance reference materials or standards treated as unknowns",real,NA,,"[REQUIRE_COLUMN]",
cfc_elementsSummary,analytePercentRecovery,"Percent recovery of the analyte, based on analysis of quality assurance reference materials or standards treated as unknowns",real,percent,,"[REQUIRE_COLUMN]",
cfc_elementsSummary,analyteMetricsCount,"Count of how many measurements were used to determine analyte metrics",unsigned integer,number,,"[ASCII][REQUIRE_COLUMN]",
cfc_elementsSummary,qaReportingStartDate,"Start date for the quality assurance (QA) reporting period",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE][LESS_THAN_OR_EQUAL_TO (NOW + 24hr)][REQUIRE_COLUMN]",
cfc_elementsSummary,qaReportingEndDate,"End date for the quality assurance (QA) reporting period",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE][GREATER_THAN_OR_EQUAL_TO (qaReportingStartDate)][LESS_THAN_OR_EQUAL_TO (NOW + 24hr)][REQUIRE_COLUMN]",
cfc_elementsSummary,laboratoryName,"Name of the laboratory or facility that is processing the sample",string,NA,"[DEFAULT_TO_LAB_LOGGED_IN]","[NAMED_LOCATION_TYPE('External Lab')]",
cfc_elementsSummary,labSpecificStartDate,"Date a specific analyte, instrument, and associated method detection limit combination started",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,
cfc_elementsSummary,labSpecificEndDate,"Date a specific analyte, instrument, and associated method detection limit combination ended",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]",,
cfc_elementsSummary,instrument,"Type of instrument used for the analysis",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_elementsSummary,testMethod,"Method used to conduct test",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_elementsSummary,method,"Published method used for analysis",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_elementsSummary,dataQF,"Data quality flag",string,NA,,"[ASCII]",
cfc_shapefile,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
cfc_shapefile,startDate,"The start date-time or interval during which an event occurred",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE_COLUMN]",
cfc_shapefile,endDate,"The end date-time or interval during which an event occurred",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE_COLUMN]",
cfc_shapefile,siteID,"NEON site code",string,NA,,"[NAMED_LOCATION_TYPE('SITE')][REQUIRE_COLUMN]",
cfc_shapefile,downloadFileName,"The name of the user-downloaded file that is linked to the record",string,NA,,"[MATCH_REGULAR_EXPRESSION('[A-Z]{4}-20[0-9]{2}-polygons.zip')][REQUIRE_COLUMN]",
cfc_shapefile,downloadFileUrl,"The URL of the file linked to the record",uri,NA,"[URI('https://s3.data.neonscience.org/neon-crown-shapefiles/') + downloadFileName]","[VERIFY_URL][MIME_TYPE('application/zip')]",
cfc_shapefile,shapefileAopYear,"Year of Airborne Observation Platform (AOP) remote sensing data used to create shapefile of crown polygons",integer,NA,,"[GREATER_THAN(2012)][LESS_THAN(2060)][REQUIRE_COLUMN]",
cfc_shapefile,dataQF,"Data quality flag",string,NA,,,
cfc_chlorophyllParameters,uid,"Unique ID within NEON database; an identifier for the record",string,NA,"[CREATE_UID]",,
cfc_chlorophyllParameters,startDate,"The start date-time or interval during which an event occurred",dateTime,NA,"[UPLOAD_DATE]",,
cfc_chlorophyllParameters,endDate,"The end date-time or interval during which an event occurred",dateTime,NA,"[UPLOAD_DATE]",,
cfc_chlorophyllParameters,analyte,"Analyte or parameter measured",string,NA,,"[REQUIRE][LOV][REQUIRE_COLUMN]",
cfc_chlorophyllParameters,chlCarotEquationInput,"Equation input for calculating chlorophyll or carotenoid content",string,NA,,"[REQUIRE][REQUIRE_COLUMN]",
cfc_chlorophyllParameters,chlCarotExtinctionCoefficient,"Parameter used for calculating chlorophyll or carotenoid content",real,NA,,"[REQUIRE][REQUIRE_COLUMN]",
cfc_chlorophyllParameters,ecReference,"A list of sources (concatenated and semicolon separated) for the extinction coefficients",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_chlorophyllParameters,laboratoryName,"Name of the laboratory or facility that is processing the sample",string,NA,"[DEFAULT_TO_LAB_LOGGED_IN]","[NAMED_LOCATION_TYPE('External Lab')]",
cfc_chlorophyllParameters,testMethod,"Method used to conduct test",string,NA,,"[ASCII][REQUIRE_COLUMN]",
cfc_chlorophyllParameters,labSpecificStartDate,"Date a specific analyte, instrument, and associated method detection limit combination started",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE_COLUMN]",
cfc_chlorophyllParameters,labSpecificEndDate,"Date a specific analyte, instrument, and associated method detection limit combination ended",dateTime,NA,"[CONVERT_TO_UTC(namedLocation)]","[REQUIRE_COLUMN]",
cfc_chlorophyllParameters,dataQF,"Data quality flag",string,NA,,"[ASCII]",
